// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package apierrors

import (
	"encoding/json"
	"fmt"
)

type UnauthorizedError string

const (
	UnauthorizedErrorUnauthorized UnauthorizedError = "Unauthorized"
)

func (e UnauthorizedError) ToPointer() *UnauthorizedError {
	return &e
}
func (e *UnauthorizedError) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Unauthorized":
		*e = UnauthorizedError(v)
		return nil
	default:
		return fmt.Errorf("invalid value for UnauthorizedError: %v", v)
	}
}

type Unauthorized struct {
	Error_ UnauthorizedError `const:"Unauthorized" json:"error"`
	Detail string            `json:"detail"`
}

var _ error = &Unauthorized{}

func (e *Unauthorized) Error() string {
	data, _ := json.Marshal(e)
	return string(data)
}
