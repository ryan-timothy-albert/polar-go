// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"polar/internal/utils"
)

type WebhookSubscriptionRevokedPayloadType string

const (
	WebhookSubscriptionRevokedPayloadTypeSubscriptionRevoked WebhookSubscriptionRevokedPayloadType = "subscription.revoked"
)

func (e WebhookSubscriptionRevokedPayloadType) ToPointer() *WebhookSubscriptionRevokedPayloadType {
	return &e
}
func (e *WebhookSubscriptionRevokedPayloadType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "subscription.revoked":
		*e = WebhookSubscriptionRevokedPayloadType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookSubscriptionRevokedPayloadType: %v", v)
	}
}

// WebhookSubscriptionRevokedPayload - Sent when a subscription is revoked, the user looses access immediately.
// Happens when the subscription is canceled, or payment is past due.
//
// **Discord & Slack support:** Full
type WebhookSubscriptionRevokedPayload struct {
	type_ WebhookSubscriptionRevokedPayloadType `const:"subscription.revoked" json:"type"`
	Data  Subscription                          `json:"data"`
}

func (w WebhookSubscriptionRevokedPayload) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookSubscriptionRevokedPayload) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WebhookSubscriptionRevokedPayload) GetType() WebhookSubscriptionRevokedPayloadType {
	return WebhookSubscriptionRevokedPayloadTypeSubscriptionRevoked
}

func (o *WebhookSubscriptionRevokedPayload) GetData() Subscription {
	if o == nil {
		return Subscription{}
	}
	return o.Data
}
