// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
)

type WebhookBenefitGrantRevokedPayloadType string

const (
	WebhookBenefitGrantRevokedPayloadTypeBenefitGrantRevoked WebhookBenefitGrantRevokedPayloadType = "benefit_grant.revoked"
)

func (e WebhookBenefitGrantRevokedPayloadType) ToPointer() *WebhookBenefitGrantRevokedPayloadType {
	return &e
}
func (e *WebhookBenefitGrantRevokedPayloadType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "benefit_grant.revoked":
		*e = WebhookBenefitGrantRevokedPayloadType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookBenefitGrantRevokedPayloadType: %v", v)
	}
}

// WebhookBenefitGrantRevokedPayload - Sent when a new benefit grant is revoked.
//
// **Discord & Slack support:** Basic
type WebhookBenefitGrantRevokedPayload struct {
	type_ WebhookBenefitGrantRevokedPayloadType `const:"benefit_grant.revoked" json:"type"`
	Data  BenefitGrantWebhook                   `json:"data"`
}

func (w WebhookBenefitGrantRevokedPayload) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookBenefitGrantRevokedPayload) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WebhookBenefitGrantRevokedPayload) GetType() WebhookBenefitGrantRevokedPayloadType {
	return WebhookBenefitGrantRevokedPayloadTypeBenefitGrantRevoked
}

func (o *WebhookBenefitGrantRevokedPayload) GetData() BenefitGrantWebhook {
	if o == nil {
		return BenefitGrantWebhook{}
	}
	return o.Data
}
