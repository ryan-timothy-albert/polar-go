// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
	"time"
)

type FileDownload struct {
	// The ID of the object.
	ID                   string           `json:"id"`
	OrganizationID       string           `json:"organization_id"`
	Name                 string           `json:"name"`
	Path                 string           `json:"path"`
	MimeType             string           `json:"mime_type"`
	Size                 int64            `json:"size"`
	StorageVersion       *string          `json:"storage_version"`
	ChecksumEtag         *string          `json:"checksum_etag"`
	ChecksumSha256Base64 *string          `json:"checksum_sha256_base64"`
	ChecksumSha256Hex    *string          `json:"checksum_sha256_hex"`
	LastModifiedAt       *time.Time       `json:"last_modified_at"`
	Download             S3DownloadURL    `json:"download"`
	Version              *string          `json:"version"`
	IsUploaded           bool             `json:"is_uploaded"`
	Service              FileServiceTypes `json:"service"`
	SizeReadable         string           `json:"size_readable"`
}

func (f FileDownload) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FileDownload) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *FileDownload) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *FileDownload) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *FileDownload) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *FileDownload) GetPath() string {
	if o == nil {
		return ""
	}
	return o.Path
}

func (o *FileDownload) GetMimeType() string {
	if o == nil {
		return ""
	}
	return o.MimeType
}

func (o *FileDownload) GetSize() int64 {
	if o == nil {
		return 0
	}
	return o.Size
}

func (o *FileDownload) GetStorageVersion() *string {
	if o == nil {
		return nil
	}
	return o.StorageVersion
}

func (o *FileDownload) GetChecksumEtag() *string {
	if o == nil {
		return nil
	}
	return o.ChecksumEtag
}

func (o *FileDownload) GetChecksumSha256Base64() *string {
	if o == nil {
		return nil
	}
	return o.ChecksumSha256Base64
}

func (o *FileDownload) GetChecksumSha256Hex() *string {
	if o == nil {
		return nil
	}
	return o.ChecksumSha256Hex
}

func (o *FileDownload) GetLastModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastModifiedAt
}

func (o *FileDownload) GetDownload() S3DownloadURL {
	if o == nil {
		return S3DownloadURL{}
	}
	return o.Download
}

func (o *FileDownload) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *FileDownload) GetIsUploaded() bool {
	if o == nil {
		return false
	}
	return o.IsUploaded
}

func (o *FileDownload) GetService() FileServiceTypes {
	if o == nil {
		return FileServiceTypes("")
	}
	return o.Service
}

func (o *FileDownload) GetSizeReadable() string {
	if o == nil {
		return ""
	}
	return o.SizeReadable
}
