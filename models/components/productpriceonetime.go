// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
)

type ProductPriceOneTimeType string

const (
	ProductPriceOneTimeTypeProductPriceOneTimeFixed  ProductPriceOneTimeType = "ProductPriceOneTimeFixed"
	ProductPriceOneTimeTypeProductPriceOneTimeCustom ProductPriceOneTimeType = "ProductPriceOneTimeCustom"
	ProductPriceOneTimeTypeProductPriceOneTimeFree   ProductPriceOneTimeType = "ProductPriceOneTimeFree"
)

type ProductPriceOneTime struct {
	ProductPriceOneTimeFixed  *ProductPriceOneTimeFixed  `queryParam:"inline"`
	ProductPriceOneTimeCustom *ProductPriceOneTimeCustom `queryParam:"inline"`
	ProductPriceOneTimeFree   *ProductPriceOneTimeFree   `queryParam:"inline"`

	Type ProductPriceOneTimeType
}

func CreateProductPriceOneTimeProductPriceOneTimeFixed(productPriceOneTimeFixed ProductPriceOneTimeFixed) ProductPriceOneTime {
	typ := ProductPriceOneTimeTypeProductPriceOneTimeFixed

	return ProductPriceOneTime{
		ProductPriceOneTimeFixed: &productPriceOneTimeFixed,
		Type:                     typ,
	}
}

func CreateProductPriceOneTimeProductPriceOneTimeCustom(productPriceOneTimeCustom ProductPriceOneTimeCustom) ProductPriceOneTime {
	typ := ProductPriceOneTimeTypeProductPriceOneTimeCustom

	return ProductPriceOneTime{
		ProductPriceOneTimeCustom: &productPriceOneTimeCustom,
		Type:                      typ,
	}
}

func CreateProductPriceOneTimeProductPriceOneTimeFree(productPriceOneTimeFree ProductPriceOneTimeFree) ProductPriceOneTime {
	typ := ProductPriceOneTimeTypeProductPriceOneTimeFree

	return ProductPriceOneTime{
		ProductPriceOneTimeFree: &productPriceOneTimeFree,
		Type:                    typ,
	}
}

func (u *ProductPriceOneTime) UnmarshalJSON(data []byte) error {

	var productPriceOneTimeFree ProductPriceOneTimeFree = ProductPriceOneTimeFree{}
	if err := utils.UnmarshalJSON(data, &productPriceOneTimeFree, "", true, true); err == nil {
		u.ProductPriceOneTimeFree = &productPriceOneTimeFree
		u.Type = ProductPriceOneTimeTypeProductPriceOneTimeFree
		return nil
	}

	var productPriceOneTimeFixed ProductPriceOneTimeFixed = ProductPriceOneTimeFixed{}
	if err := utils.UnmarshalJSON(data, &productPriceOneTimeFixed, "", true, true); err == nil {
		u.ProductPriceOneTimeFixed = &productPriceOneTimeFixed
		u.Type = ProductPriceOneTimeTypeProductPriceOneTimeFixed
		return nil
	}

	var productPriceOneTimeCustom ProductPriceOneTimeCustom = ProductPriceOneTimeCustom{}
	if err := utils.UnmarshalJSON(data, &productPriceOneTimeCustom, "", true, true); err == nil {
		u.ProductPriceOneTimeCustom = &productPriceOneTimeCustom
		u.Type = ProductPriceOneTimeTypeProductPriceOneTimeCustom
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for ProductPriceOneTime", string(data))
}

func (u ProductPriceOneTime) MarshalJSON() ([]byte, error) {
	if u.ProductPriceOneTimeFixed != nil {
		return utils.MarshalJSON(u.ProductPriceOneTimeFixed, "", true)
	}

	if u.ProductPriceOneTimeCustom != nil {
		return utils.MarshalJSON(u.ProductPriceOneTimeCustom, "", true)
	}

	if u.ProductPriceOneTimeFree != nil {
		return utils.MarshalJSON(u.ProductPriceOneTimeFree, "", true)
	}

	return nil, errors.New("could not marshal union type ProductPriceOneTime: all fields are null")
}
