// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
	"time"
)

type Organization struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	// The organization ID.
	ID                                string  `json:"id"`
	Name                              string  `json:"name"`
	Slug                              string  `json:"slug"`
	AvatarURL                         *string `json:"avatar_url"`
	Bio                               *string `json:"bio"`
	Company                           *string `json:"company"`
	Blog                              *string `json:"blog"`
	Location                          *string `json:"location"`
	Email                             *string `json:"email"`
	TwitterUsername                   *string `json:"twitter_username"`
	PledgeMinimumAmount               int64   `json:"pledge_minimum_amount"`
	PledgeBadgeShowAmount             bool    `json:"pledge_badge_show_amount"`
	DefaultUpfrontSplitToContributors *int64  `json:"default_upfront_split_to_contributors"`
	// Settings for the organization profile
	ProfileSettings *OrganizationProfileSettings `json:"profile_settings"`
	// Settings for the organization features
	FeatureSettings *OrganizationFeatureSettings `json:"feature_settings"`
}

func (o Organization) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *Organization) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *Organization) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *Organization) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *Organization) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Organization) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Organization) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *Organization) GetAvatarURL() *string {
	if o == nil {
		return nil
	}
	return o.AvatarURL
}

func (o *Organization) GetBio() *string {
	if o == nil {
		return nil
	}
	return o.Bio
}

func (o *Organization) GetCompany() *string {
	if o == nil {
		return nil
	}
	return o.Company
}

func (o *Organization) GetBlog() *string {
	if o == nil {
		return nil
	}
	return o.Blog
}

func (o *Organization) GetLocation() *string {
	if o == nil {
		return nil
	}
	return o.Location
}

func (o *Organization) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *Organization) GetTwitterUsername() *string {
	if o == nil {
		return nil
	}
	return o.TwitterUsername
}

func (o *Organization) GetPledgeMinimumAmount() int64 {
	if o == nil {
		return 0
	}
	return o.PledgeMinimumAmount
}

func (o *Organization) GetPledgeBadgeShowAmount() bool {
	if o == nil {
		return false
	}
	return o.PledgeBadgeShowAmount
}

func (o *Organization) GetDefaultUpfrontSplitToContributors() *int64 {
	if o == nil {
		return nil
	}
	return o.DefaultUpfrontSplitToContributors
}

func (o *Organization) GetProfileSettings() *OrganizationProfileSettings {
	if o == nil {
		return nil
	}
	return o.ProfileSettings
}

func (o *Organization) GetFeatureSettings() *OrganizationFeatureSettings {
	if o == nil {
		return nil
	}
	return o.FeatureSettings
}
