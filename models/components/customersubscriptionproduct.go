// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
	"time"
)

type CustomerSubscriptionProduct struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	// The ID of the product.
	ID string `json:"id"`
	// The name of the product.
	Name string `json:"name"`
	// The description of the product.
	Description *string `json:"description"`
	// Whether the product is a subscription tier.
	IsRecurring bool `json:"is_recurring"`
	// Whether the product is archived and no longer available.
	IsArchived bool `json:"is_archived"`
	// The ID of the organization owning the product.
	OrganizationID string `json:"organization_id"`
	// List of prices for this product.
	Prices []ProductPrice `json:"prices"`
	// List of benefits granted by the product.
	Benefits []BenefitBase `json:"benefits"`
	// List of medias associated to the product.
	Medias       []ProductMediaFileRead `json:"medias"`
	Organization Organization           `json:"organization"`
}

func (c CustomerSubscriptionProduct) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CustomerSubscriptionProduct) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CustomerSubscriptionProduct) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *CustomerSubscriptionProduct) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *CustomerSubscriptionProduct) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CustomerSubscriptionProduct) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CustomerSubscriptionProduct) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CustomerSubscriptionProduct) GetIsRecurring() bool {
	if o == nil {
		return false
	}
	return o.IsRecurring
}

func (o *CustomerSubscriptionProduct) GetIsArchived() bool {
	if o == nil {
		return false
	}
	return o.IsArchived
}

func (o *CustomerSubscriptionProduct) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *CustomerSubscriptionProduct) GetPrices() []ProductPrice {
	if o == nil {
		return []ProductPrice{}
	}
	return o.Prices
}

func (o *CustomerSubscriptionProduct) GetBenefits() []BenefitBase {
	if o == nil {
		return []BenefitBase{}
	}
	return o.Benefits
}

func (o *CustomerSubscriptionProduct) GetMedias() []ProductMediaFileRead {
	if o == nil {
		return []ProductMediaFileRead{}
	}
	return o.Medias
}

func (o *CustomerSubscriptionProduct) GetOrganization() Organization {
	if o == nil {
		return Organization{}
	}
	return o.Organization
}
