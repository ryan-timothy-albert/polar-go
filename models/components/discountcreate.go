// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
)

type DiscountCreateType string

const (
	DiscountCreateTypeDiscountFixedOnceForeverDurationCreate      DiscountCreateType = "DiscountFixedOnceForeverDurationCreate"
	DiscountCreateTypeDiscountFixedRepeatDurationCreate           DiscountCreateType = "DiscountFixedRepeatDurationCreate"
	DiscountCreateTypeDiscountPercentageOnceForeverDurationCreate DiscountCreateType = "DiscountPercentageOnceForeverDurationCreate"
	DiscountCreateTypeDiscountPercentageRepeatDurationCreate      DiscountCreateType = "DiscountPercentageRepeatDurationCreate"
)

type DiscountCreate struct {
	DiscountFixedOnceForeverDurationCreate      *DiscountFixedOnceForeverDurationCreate      `queryParam:"inline"`
	DiscountFixedRepeatDurationCreate           *DiscountFixedRepeatDurationCreate           `queryParam:"inline"`
	DiscountPercentageOnceForeverDurationCreate *DiscountPercentageOnceForeverDurationCreate `queryParam:"inline"`
	DiscountPercentageRepeatDurationCreate      *DiscountPercentageRepeatDurationCreate      `queryParam:"inline"`

	Type DiscountCreateType
}

func CreateDiscountCreateDiscountFixedOnceForeverDurationCreate(discountFixedOnceForeverDurationCreate DiscountFixedOnceForeverDurationCreate) DiscountCreate {
	typ := DiscountCreateTypeDiscountFixedOnceForeverDurationCreate

	return DiscountCreate{
		DiscountFixedOnceForeverDurationCreate: &discountFixedOnceForeverDurationCreate,
		Type:                                   typ,
	}
}

func CreateDiscountCreateDiscountFixedRepeatDurationCreate(discountFixedRepeatDurationCreate DiscountFixedRepeatDurationCreate) DiscountCreate {
	typ := DiscountCreateTypeDiscountFixedRepeatDurationCreate

	return DiscountCreate{
		DiscountFixedRepeatDurationCreate: &discountFixedRepeatDurationCreate,
		Type:                              typ,
	}
}

func CreateDiscountCreateDiscountPercentageOnceForeverDurationCreate(discountPercentageOnceForeverDurationCreate DiscountPercentageOnceForeverDurationCreate) DiscountCreate {
	typ := DiscountCreateTypeDiscountPercentageOnceForeverDurationCreate

	return DiscountCreate{
		DiscountPercentageOnceForeverDurationCreate: &discountPercentageOnceForeverDurationCreate,
		Type: typ,
	}
}

func CreateDiscountCreateDiscountPercentageRepeatDurationCreate(discountPercentageRepeatDurationCreate DiscountPercentageRepeatDurationCreate) DiscountCreate {
	typ := DiscountCreateTypeDiscountPercentageRepeatDurationCreate

	return DiscountCreate{
		DiscountPercentageRepeatDurationCreate: &discountPercentageRepeatDurationCreate,
		Type:                                   typ,
	}
}

func (u *DiscountCreate) UnmarshalJSON(data []byte) error {

	var discountPercentageOnceForeverDurationCreate DiscountPercentageOnceForeverDurationCreate = DiscountPercentageOnceForeverDurationCreate{}
	if err := utils.UnmarshalJSON(data, &discountPercentageOnceForeverDurationCreate, "", true, true); err == nil {
		u.DiscountPercentageOnceForeverDurationCreate = &discountPercentageOnceForeverDurationCreate
		u.Type = DiscountCreateTypeDiscountPercentageOnceForeverDurationCreate
		return nil
	}

	var discountFixedOnceForeverDurationCreate DiscountFixedOnceForeverDurationCreate = DiscountFixedOnceForeverDurationCreate{}
	if err := utils.UnmarshalJSON(data, &discountFixedOnceForeverDurationCreate, "", true, true); err == nil {
		u.DiscountFixedOnceForeverDurationCreate = &discountFixedOnceForeverDurationCreate
		u.Type = DiscountCreateTypeDiscountFixedOnceForeverDurationCreate
		return nil
	}

	var discountPercentageRepeatDurationCreate DiscountPercentageRepeatDurationCreate = DiscountPercentageRepeatDurationCreate{}
	if err := utils.UnmarshalJSON(data, &discountPercentageRepeatDurationCreate, "", true, true); err == nil {
		u.DiscountPercentageRepeatDurationCreate = &discountPercentageRepeatDurationCreate
		u.Type = DiscountCreateTypeDiscountPercentageRepeatDurationCreate
		return nil
	}

	var discountFixedRepeatDurationCreate DiscountFixedRepeatDurationCreate = DiscountFixedRepeatDurationCreate{}
	if err := utils.UnmarshalJSON(data, &discountFixedRepeatDurationCreate, "", true, true); err == nil {
		u.DiscountFixedRepeatDurationCreate = &discountFixedRepeatDurationCreate
		u.Type = DiscountCreateTypeDiscountFixedRepeatDurationCreate
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for DiscountCreate", string(data))
}

func (u DiscountCreate) MarshalJSON() ([]byte, error) {
	if u.DiscountFixedOnceForeverDurationCreate != nil {
		return utils.MarshalJSON(u.DiscountFixedOnceForeverDurationCreate, "", true)
	}

	if u.DiscountFixedRepeatDurationCreate != nil {
		return utils.MarshalJSON(u.DiscountFixedRepeatDurationCreate, "", true)
	}

	if u.DiscountPercentageOnceForeverDurationCreate != nil {
		return utils.MarshalJSON(u.DiscountPercentageOnceForeverDurationCreate, "", true)
	}

	if u.DiscountPercentageRepeatDurationCreate != nil {
		return utils.MarshalJSON(u.DiscountPercentageRepeatDurationCreate, "", true)
	}

	return nil, errors.New("could not marshal union type DiscountCreate: all fields are null")
}
