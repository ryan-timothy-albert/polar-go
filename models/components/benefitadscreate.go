// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
)

type BenefitAdsCreateType string

const (
	BenefitAdsCreateTypeAds BenefitAdsCreateType = "ads"
)

func (e BenefitAdsCreateType) ToPointer() *BenefitAdsCreateType {
	return &e
}
func (e *BenefitAdsCreateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ads":
		*e = BenefitAdsCreateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BenefitAdsCreateType: %v", v)
	}
}

type BenefitAdsCreate struct {
	type_ BenefitAdsCreateType `const:"ads" json:"type"`
	// The description of the benefit. Will be displayed on products having this benefit.
	Description string `json:"description"`
	// The ID of the organization owning the benefit. **Required unless you use an organization token.**
	OrganizationID *string `json:"organization_id,omitempty"`
	// Properties for a benefit of type `ads`.
	Properties BenefitAdsProperties `json:"properties"`
}

func (b BenefitAdsCreate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BenefitAdsCreate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BenefitAdsCreate) GetType() BenefitAdsCreateType {
	return BenefitAdsCreateTypeAds
}

func (o *BenefitAdsCreate) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *BenefitAdsCreate) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *BenefitAdsCreate) GetProperties() BenefitAdsProperties {
	if o == nil {
		return BenefitAdsProperties{}
	}
	return o.Properties
}
