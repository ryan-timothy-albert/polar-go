// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
	"time"
)

type BenefitGrantWebhookPropertiesType string

const (
	BenefitGrantWebhookPropertiesTypeBenefitGrantDiscordProperties          BenefitGrantWebhookPropertiesType = "BenefitGrantDiscordProperties"
	BenefitGrantWebhookPropertiesTypeBenefitGrantGitHubRepositoryProperties BenefitGrantWebhookPropertiesType = "BenefitGrantGitHubRepositoryProperties"
	BenefitGrantWebhookPropertiesTypeBenefitGrantDownloadablesProperties    BenefitGrantWebhookPropertiesType = "BenefitGrantDownloadablesProperties"
	BenefitGrantWebhookPropertiesTypeBenefitGrantLicenseKeysProperties      BenefitGrantWebhookPropertiesType = "BenefitGrantLicenseKeysProperties"
	BenefitGrantWebhookPropertiesTypeBenefitGrantAdsProperties              BenefitGrantWebhookPropertiesType = "BenefitGrantAdsProperties"
	BenefitGrantWebhookPropertiesTypeBenefitGrantCustomProperties           BenefitGrantWebhookPropertiesType = "BenefitGrantCustomProperties"
)

type BenefitGrantWebhookProperties struct {
	BenefitGrantDiscordProperties          *BenefitGrantDiscordProperties          `queryParam:"inline"`
	BenefitGrantGitHubRepositoryProperties *BenefitGrantGitHubRepositoryProperties `queryParam:"inline"`
	BenefitGrantDownloadablesProperties    *BenefitGrantDownloadablesProperties    `queryParam:"inline"`
	BenefitGrantLicenseKeysProperties      *BenefitGrantLicenseKeysProperties      `queryParam:"inline"`
	BenefitGrantAdsProperties              *BenefitGrantAdsProperties              `queryParam:"inline"`
	BenefitGrantCustomProperties           *BenefitGrantCustomProperties           `queryParam:"inline"`

	Type BenefitGrantWebhookPropertiesType
}

func CreateBenefitGrantWebhookPropertiesBenefitGrantDiscordProperties(benefitGrantDiscordProperties BenefitGrantDiscordProperties) BenefitGrantWebhookProperties {
	typ := BenefitGrantWebhookPropertiesTypeBenefitGrantDiscordProperties

	return BenefitGrantWebhookProperties{
		BenefitGrantDiscordProperties: &benefitGrantDiscordProperties,
		Type:                          typ,
	}
}

func CreateBenefitGrantWebhookPropertiesBenefitGrantGitHubRepositoryProperties(benefitGrantGitHubRepositoryProperties BenefitGrantGitHubRepositoryProperties) BenefitGrantWebhookProperties {
	typ := BenefitGrantWebhookPropertiesTypeBenefitGrantGitHubRepositoryProperties

	return BenefitGrantWebhookProperties{
		BenefitGrantGitHubRepositoryProperties: &benefitGrantGitHubRepositoryProperties,
		Type:                                   typ,
	}
}

func CreateBenefitGrantWebhookPropertiesBenefitGrantDownloadablesProperties(benefitGrantDownloadablesProperties BenefitGrantDownloadablesProperties) BenefitGrantWebhookProperties {
	typ := BenefitGrantWebhookPropertiesTypeBenefitGrantDownloadablesProperties

	return BenefitGrantWebhookProperties{
		BenefitGrantDownloadablesProperties: &benefitGrantDownloadablesProperties,
		Type:                                typ,
	}
}

func CreateBenefitGrantWebhookPropertiesBenefitGrantLicenseKeysProperties(benefitGrantLicenseKeysProperties BenefitGrantLicenseKeysProperties) BenefitGrantWebhookProperties {
	typ := BenefitGrantWebhookPropertiesTypeBenefitGrantLicenseKeysProperties

	return BenefitGrantWebhookProperties{
		BenefitGrantLicenseKeysProperties: &benefitGrantLicenseKeysProperties,
		Type:                              typ,
	}
}

func CreateBenefitGrantWebhookPropertiesBenefitGrantAdsProperties(benefitGrantAdsProperties BenefitGrantAdsProperties) BenefitGrantWebhookProperties {
	typ := BenefitGrantWebhookPropertiesTypeBenefitGrantAdsProperties

	return BenefitGrantWebhookProperties{
		BenefitGrantAdsProperties: &benefitGrantAdsProperties,
		Type:                      typ,
	}
}

func CreateBenefitGrantWebhookPropertiesBenefitGrantCustomProperties(benefitGrantCustomProperties BenefitGrantCustomProperties) BenefitGrantWebhookProperties {
	typ := BenefitGrantWebhookPropertiesTypeBenefitGrantCustomProperties

	return BenefitGrantWebhookProperties{
		BenefitGrantCustomProperties: &benefitGrantCustomProperties,
		Type:                         typ,
	}
}

func (u *BenefitGrantWebhookProperties) UnmarshalJSON(data []byte) error {

	var benefitGrantCustomProperties BenefitGrantCustomProperties = BenefitGrantCustomProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantCustomProperties, "", true, true); err == nil {
		u.BenefitGrantCustomProperties = &benefitGrantCustomProperties
		u.Type = BenefitGrantWebhookPropertiesTypeBenefitGrantCustomProperties
		return nil
	}

	var benefitGrantDownloadablesProperties BenefitGrantDownloadablesProperties = BenefitGrantDownloadablesProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantDownloadablesProperties, "", true, true); err == nil {
		u.BenefitGrantDownloadablesProperties = &benefitGrantDownloadablesProperties
		u.Type = BenefitGrantWebhookPropertiesTypeBenefitGrantDownloadablesProperties
		return nil
	}

	var benefitGrantAdsProperties BenefitGrantAdsProperties = BenefitGrantAdsProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantAdsProperties, "", true, true); err == nil {
		u.BenefitGrantAdsProperties = &benefitGrantAdsProperties
		u.Type = BenefitGrantWebhookPropertiesTypeBenefitGrantAdsProperties
		return nil
	}

	var benefitGrantLicenseKeysProperties BenefitGrantLicenseKeysProperties = BenefitGrantLicenseKeysProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantLicenseKeysProperties, "", true, true); err == nil {
		u.BenefitGrantLicenseKeysProperties = &benefitGrantLicenseKeysProperties
		u.Type = BenefitGrantWebhookPropertiesTypeBenefitGrantLicenseKeysProperties
		return nil
	}

	var benefitGrantDiscordProperties BenefitGrantDiscordProperties = BenefitGrantDiscordProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantDiscordProperties, "", true, true); err == nil {
		u.BenefitGrantDiscordProperties = &benefitGrantDiscordProperties
		u.Type = BenefitGrantWebhookPropertiesTypeBenefitGrantDiscordProperties
		return nil
	}

	var benefitGrantGitHubRepositoryProperties BenefitGrantGitHubRepositoryProperties = BenefitGrantGitHubRepositoryProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantGitHubRepositoryProperties, "", true, true); err == nil {
		u.BenefitGrantGitHubRepositoryProperties = &benefitGrantGitHubRepositoryProperties
		u.Type = BenefitGrantWebhookPropertiesTypeBenefitGrantGitHubRepositoryProperties
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for BenefitGrantWebhookProperties", string(data))
}

func (u BenefitGrantWebhookProperties) MarshalJSON() ([]byte, error) {
	if u.BenefitGrantDiscordProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantDiscordProperties, "", true)
	}

	if u.BenefitGrantGitHubRepositoryProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantGitHubRepositoryProperties, "", true)
	}

	if u.BenefitGrantDownloadablesProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantDownloadablesProperties, "", true)
	}

	if u.BenefitGrantLicenseKeysProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantLicenseKeysProperties, "", true)
	}

	if u.BenefitGrantAdsProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantAdsProperties, "", true)
	}

	if u.BenefitGrantCustomProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantCustomProperties, "", true)
	}

	return nil, errors.New("could not marshal union type BenefitGrantWebhookProperties: all fields are null")
}

type PreviousPropertiesType string

const (
	PreviousPropertiesTypeBenefitGrantDiscordProperties          PreviousPropertiesType = "BenefitGrantDiscordProperties"
	PreviousPropertiesTypeBenefitGrantGitHubRepositoryProperties PreviousPropertiesType = "BenefitGrantGitHubRepositoryProperties"
	PreviousPropertiesTypeBenefitGrantDownloadablesProperties    PreviousPropertiesType = "BenefitGrantDownloadablesProperties"
	PreviousPropertiesTypeBenefitGrantLicenseKeysProperties      PreviousPropertiesType = "BenefitGrantLicenseKeysProperties"
	PreviousPropertiesTypeBenefitGrantAdsProperties              PreviousPropertiesType = "BenefitGrantAdsProperties"
	PreviousPropertiesTypeBenefitGrantCustomProperties           PreviousPropertiesType = "BenefitGrantCustomProperties"
)

type PreviousProperties struct {
	BenefitGrantDiscordProperties          *BenefitGrantDiscordProperties          `queryParam:"inline"`
	BenefitGrantGitHubRepositoryProperties *BenefitGrantGitHubRepositoryProperties `queryParam:"inline"`
	BenefitGrantDownloadablesProperties    *BenefitGrantDownloadablesProperties    `queryParam:"inline"`
	BenefitGrantLicenseKeysProperties      *BenefitGrantLicenseKeysProperties      `queryParam:"inline"`
	BenefitGrantAdsProperties              *BenefitGrantAdsProperties              `queryParam:"inline"`
	BenefitGrantCustomProperties           *BenefitGrantCustomProperties           `queryParam:"inline"`

	Type PreviousPropertiesType
}

func CreatePreviousPropertiesBenefitGrantDiscordProperties(benefitGrantDiscordProperties BenefitGrantDiscordProperties) PreviousProperties {
	typ := PreviousPropertiesTypeBenefitGrantDiscordProperties

	return PreviousProperties{
		BenefitGrantDiscordProperties: &benefitGrantDiscordProperties,
		Type:                          typ,
	}
}

func CreatePreviousPropertiesBenefitGrantGitHubRepositoryProperties(benefitGrantGitHubRepositoryProperties BenefitGrantGitHubRepositoryProperties) PreviousProperties {
	typ := PreviousPropertiesTypeBenefitGrantGitHubRepositoryProperties

	return PreviousProperties{
		BenefitGrantGitHubRepositoryProperties: &benefitGrantGitHubRepositoryProperties,
		Type:                                   typ,
	}
}

func CreatePreviousPropertiesBenefitGrantDownloadablesProperties(benefitGrantDownloadablesProperties BenefitGrantDownloadablesProperties) PreviousProperties {
	typ := PreviousPropertiesTypeBenefitGrantDownloadablesProperties

	return PreviousProperties{
		BenefitGrantDownloadablesProperties: &benefitGrantDownloadablesProperties,
		Type:                                typ,
	}
}

func CreatePreviousPropertiesBenefitGrantLicenseKeysProperties(benefitGrantLicenseKeysProperties BenefitGrantLicenseKeysProperties) PreviousProperties {
	typ := PreviousPropertiesTypeBenefitGrantLicenseKeysProperties

	return PreviousProperties{
		BenefitGrantLicenseKeysProperties: &benefitGrantLicenseKeysProperties,
		Type:                              typ,
	}
}

func CreatePreviousPropertiesBenefitGrantAdsProperties(benefitGrantAdsProperties BenefitGrantAdsProperties) PreviousProperties {
	typ := PreviousPropertiesTypeBenefitGrantAdsProperties

	return PreviousProperties{
		BenefitGrantAdsProperties: &benefitGrantAdsProperties,
		Type:                      typ,
	}
}

func CreatePreviousPropertiesBenefitGrantCustomProperties(benefitGrantCustomProperties BenefitGrantCustomProperties) PreviousProperties {
	typ := PreviousPropertiesTypeBenefitGrantCustomProperties

	return PreviousProperties{
		BenefitGrantCustomProperties: &benefitGrantCustomProperties,
		Type:                         typ,
	}
}

func (u *PreviousProperties) UnmarshalJSON(data []byte) error {

	var benefitGrantCustomProperties BenefitGrantCustomProperties = BenefitGrantCustomProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantCustomProperties, "", true, true); err == nil {
		u.BenefitGrantCustomProperties = &benefitGrantCustomProperties
		u.Type = PreviousPropertiesTypeBenefitGrantCustomProperties
		return nil
	}

	var benefitGrantDownloadablesProperties BenefitGrantDownloadablesProperties = BenefitGrantDownloadablesProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantDownloadablesProperties, "", true, true); err == nil {
		u.BenefitGrantDownloadablesProperties = &benefitGrantDownloadablesProperties
		u.Type = PreviousPropertiesTypeBenefitGrantDownloadablesProperties
		return nil
	}

	var benefitGrantAdsProperties BenefitGrantAdsProperties = BenefitGrantAdsProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantAdsProperties, "", true, true); err == nil {
		u.BenefitGrantAdsProperties = &benefitGrantAdsProperties
		u.Type = PreviousPropertiesTypeBenefitGrantAdsProperties
		return nil
	}

	var benefitGrantLicenseKeysProperties BenefitGrantLicenseKeysProperties = BenefitGrantLicenseKeysProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantLicenseKeysProperties, "", true, true); err == nil {
		u.BenefitGrantLicenseKeysProperties = &benefitGrantLicenseKeysProperties
		u.Type = PreviousPropertiesTypeBenefitGrantLicenseKeysProperties
		return nil
	}

	var benefitGrantDiscordProperties BenefitGrantDiscordProperties = BenefitGrantDiscordProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantDiscordProperties, "", true, true); err == nil {
		u.BenefitGrantDiscordProperties = &benefitGrantDiscordProperties
		u.Type = PreviousPropertiesTypeBenefitGrantDiscordProperties
		return nil
	}

	var benefitGrantGitHubRepositoryProperties BenefitGrantGitHubRepositoryProperties = BenefitGrantGitHubRepositoryProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantGitHubRepositoryProperties, "", true, true); err == nil {
		u.BenefitGrantGitHubRepositoryProperties = &benefitGrantGitHubRepositoryProperties
		u.Type = PreviousPropertiesTypeBenefitGrantGitHubRepositoryProperties
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for PreviousProperties", string(data))
}

func (u PreviousProperties) MarshalJSON() ([]byte, error) {
	if u.BenefitGrantDiscordProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantDiscordProperties, "", true)
	}

	if u.BenefitGrantGitHubRepositoryProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantGitHubRepositoryProperties, "", true)
	}

	if u.BenefitGrantDownloadablesProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantDownloadablesProperties, "", true)
	}

	if u.BenefitGrantLicenseKeysProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantLicenseKeysProperties, "", true)
	}

	if u.BenefitGrantAdsProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantAdsProperties, "", true)
	}

	if u.BenefitGrantCustomProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantCustomProperties, "", true)
	}

	return nil, errors.New("could not marshal union type PreviousProperties: all fields are null")
}

type BenefitGrantWebhook struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	// The ID of the grant.
	ID string `json:"id"`
	// The timestamp when the benefit was granted. If `None`, the benefit is not granted.
	GrantedAt *time.Time `json:"granted_at,omitempty"`
	// Whether the benefit is granted.
	IsGranted bool `json:"is_granted"`
	// The timestamp when the benefit was revoked. If `None`, the benefit is not revoked.
	RevokedAt *time.Time `json:"revoked_at,omitempty"`
	// Whether the benefit is revoked.
	IsRevoked bool `json:"is_revoked"`
	// The ID of the subscription that granted this benefit.
	SubscriptionID *string `json:"subscription_id"`
	// The ID of the order that granted this benefit.
	OrderID *string `json:"order_id"`
	// The ID of the customer concerned by this grant.
	CustomerID string `json:"customer_id"`
	// Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	UserID string `json:"user_id"`
	// The ID of the benefit concerned by this grant.
	BenefitID          string                        `json:"benefit_id"`
	Properties         BenefitGrantWebhookProperties `json:"properties"`
	Benefit            Benefit                       `json:"benefit"`
	PreviousProperties *PreviousProperties           `json:"previous_properties,omitempty"`
}

func (b BenefitGrantWebhook) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BenefitGrantWebhook) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BenefitGrantWebhook) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *BenefitGrantWebhook) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *BenefitGrantWebhook) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *BenefitGrantWebhook) GetGrantedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.GrantedAt
}

func (o *BenefitGrantWebhook) GetIsGranted() bool {
	if o == nil {
		return false
	}
	return o.IsGranted
}

func (o *BenefitGrantWebhook) GetRevokedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RevokedAt
}

func (o *BenefitGrantWebhook) GetIsRevoked() bool {
	if o == nil {
		return false
	}
	return o.IsRevoked
}

func (o *BenefitGrantWebhook) GetSubscriptionID() *string {
	if o == nil {
		return nil
	}
	return o.SubscriptionID
}

func (o *BenefitGrantWebhook) GetOrderID() *string {
	if o == nil {
		return nil
	}
	return o.OrderID
}

func (o *BenefitGrantWebhook) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *BenefitGrantWebhook) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *BenefitGrantWebhook) GetBenefitID() string {
	if o == nil {
		return ""
	}
	return o.BenefitID
}

func (o *BenefitGrantWebhook) GetProperties() BenefitGrantWebhookProperties {
	if o == nil {
		return BenefitGrantWebhookProperties{}
	}
	return o.Properties
}

func (o *BenefitGrantWebhook) GetBenefit() Benefit {
	if o == nil {
		return Benefit{}
	}
	return o.Benefit
}

func (o *BenefitGrantWebhook) GetPreviousProperties() *PreviousProperties {
	if o == nil {
		return nil
	}
	return o.PreviousProperties
}
