// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
)

// DownloadableFileCreate - Schema to create a file to be associated with the downloadables benefit.
type DownloadableFileCreate struct {
	OrganizationID       *string               `json:"organization_id,omitempty"`
	Name                 string                `json:"name"`
	MimeType             string                `json:"mime_type"`
	Size                 int64                 `json:"size"`
	ChecksumSha256Base64 *string               `json:"checksum_sha256_base64,omitempty"`
	Upload               S3FileCreateMultipart `json:"upload"`
	service              string                `const:"downloadable" json:"service"`
	Version              *string               `json:"version,omitempty"`
}

func (d DownloadableFileCreate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DownloadableFileCreate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DownloadableFileCreate) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *DownloadableFileCreate) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *DownloadableFileCreate) GetMimeType() string {
	if o == nil {
		return ""
	}
	return o.MimeType
}

func (o *DownloadableFileCreate) GetSize() int64 {
	if o == nil {
		return 0
	}
	return o.Size
}

func (o *DownloadableFileCreate) GetChecksumSha256Base64() *string {
	if o == nil {
		return nil
	}
	return o.ChecksumSha256Base64
}

func (o *DownloadableFileCreate) GetUpload() S3FileCreateMultipart {
	if o == nil {
		return S3FileCreateMultipart{}
	}
	return o.Upload
}

func (o *DownloadableFileCreate) GetService() string {
	return "downloadable"
}

func (o *DownloadableFileCreate) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}
