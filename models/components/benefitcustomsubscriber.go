// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
	"time"
)

type BenefitCustomSubscriberType string

const (
	BenefitCustomSubscriberTypeCustom BenefitCustomSubscriberType = "custom"
)

func (e BenefitCustomSubscriberType) ToPointer() *BenefitCustomSubscriberType {
	return &e
}
func (e *BenefitCustomSubscriberType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "custom":
		*e = BenefitCustomSubscriberType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BenefitCustomSubscriberType: %v", v)
	}
}

type BenefitCustomSubscriber struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	// The ID of the benefit.
	ID    string                      `json:"id"`
	type_ BenefitCustomSubscriberType `const:"custom" json:"type"`
	// The description of the benefit.
	Description string `json:"description"`
	// Whether the benefit is selectable when creating a product.
	Selectable bool `json:"selectable"`
	// Whether the benefit is deletable.
	Deletable bool `json:"deletable"`
	// The ID of the organization owning the benefit.
	OrganizationID string       `json:"organization_id"`
	Organization   Organization `json:"organization"`
	// Properties available to subscribers for a benefit of type `custom`.
	Properties BenefitCustomSubscriberProperties `json:"properties"`
}

func (b BenefitCustomSubscriber) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BenefitCustomSubscriber) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BenefitCustomSubscriber) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *BenefitCustomSubscriber) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *BenefitCustomSubscriber) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *BenefitCustomSubscriber) GetType() BenefitCustomSubscriberType {
	return BenefitCustomSubscriberTypeCustom
}

func (o *BenefitCustomSubscriber) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *BenefitCustomSubscriber) GetSelectable() bool {
	if o == nil {
		return false
	}
	return o.Selectable
}

func (o *BenefitCustomSubscriber) GetDeletable() bool {
	if o == nil {
		return false
	}
	return o.Deletable
}

func (o *BenefitCustomSubscriber) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *BenefitCustomSubscriber) GetOrganization() Organization {
	if o == nil {
		return Organization{}
	}
	return o.Organization
}

func (o *BenefitCustomSubscriber) GetProperties() BenefitCustomSubscriberProperties {
	if o == nil {
		return BenefitCustomSubscriberProperties{}
	}
	return o.Properties
}
