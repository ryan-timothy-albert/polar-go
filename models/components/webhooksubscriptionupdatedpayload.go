// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
)

// WebhookSubscriptionUpdatedPayload - Sent when a subscription is updated. This event fires for all changes to the subscription, including renewals.
//
// If you want more specific events, you can listen to `subscription.active`, `subscription.canceled`, and `subscription.revoked`.
//
// To listen specifically for renewals, you can listen to `order.created` events and check the `billing_reason` field.
//
// **Discord & Slack support:** On cancellation and revocation. Renewals are skipped.
type WebhookSubscriptionUpdatedPayload struct {
	type_ string       `const:"subscription.updated" json:"type"`
	Data  Subscription `json:"data"`
}

func (w WebhookSubscriptionUpdatedPayload) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookSubscriptionUpdatedPayload) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WebhookSubscriptionUpdatedPayload) GetType() string {
	return "subscription.updated"
}

func (o *WebhookSubscriptionUpdatedPayload) GetData() Subscription {
	if o == nil {
		return Subscription{}
	}
	return o.Data
}
