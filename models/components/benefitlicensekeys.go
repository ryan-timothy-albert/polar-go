// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"polar/internal/utils"
	"time"
)

type BenefitLicenseKeysType string

const (
	BenefitLicenseKeysTypeLicenseKeys BenefitLicenseKeysType = "license_keys"
)

func (e BenefitLicenseKeysType) ToPointer() *BenefitLicenseKeysType {
	return &e
}
func (e *BenefitLicenseKeysType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "license_keys":
		*e = BenefitLicenseKeysType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BenefitLicenseKeysType: %v", v)
	}
}

type BenefitLicenseKeys struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	// The ID of the benefit.
	ID    string                 `json:"id"`
	type_ BenefitLicenseKeysType `const:"license_keys" json:"type"`
	// The description of the benefit.
	Description string `json:"description"`
	// Whether the benefit is selectable when creating a product.
	Selectable bool `json:"selectable"`
	// Whether the benefit is deletable.
	Deletable bool `json:"deletable"`
	// The ID of the organization owning the benefit.
	OrganizationID string                       `json:"organization_id"`
	Properties     BenefitLicenseKeysProperties `json:"properties"`
}

func (b BenefitLicenseKeys) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BenefitLicenseKeys) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *BenefitLicenseKeys) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *BenefitLicenseKeys) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *BenefitLicenseKeys) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *BenefitLicenseKeys) GetType() BenefitLicenseKeysType {
	return BenefitLicenseKeysTypeLicenseKeys
}

func (o *BenefitLicenseKeys) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *BenefitLicenseKeys) GetSelectable() bool {
	if o == nil {
		return false
	}
	return o.Selectable
}

func (o *BenefitLicenseKeys) GetDeletable() bool {
	if o == nil {
		return false
	}
	return o.Deletable
}

func (o *BenefitLicenseKeys) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *BenefitLicenseKeys) GetProperties() BenefitLicenseKeysProperties {
	if o == nil {
		return BenefitLicenseKeysProperties{}
	}
	return o.Properties
}
