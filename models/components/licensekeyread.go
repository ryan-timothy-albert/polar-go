// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"polar/internal/utils"
	"time"
)

type LicenseKeyRead struct {
	ID             string `json:"id"`
	OrganizationID string `json:"organization_id"`
	// Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	UserID     string             `json:"user_id"`
	CustomerID string             `json:"customer_id"`
	User       LicenseKeyUser     `json:"user"`
	Customer   LicenseKeyCustomer `json:"customer"`
	// The benefit ID.
	BenefitID        string           `json:"benefit_id"`
	Key              string           `json:"key"`
	DisplayKey       string           `json:"display_key"`
	Status           LicenseKeyStatus `json:"status"`
	LimitActivations *int64           `json:"limit_activations"`
	Usage            int64            `json:"usage"`
	LimitUsage       *int64           `json:"limit_usage"`
	Validations      int64            `json:"validations"`
	LastValidatedAt  *time.Time       `json:"last_validated_at"`
	ExpiresAt        *time.Time       `json:"expires_at"`
}

func (l LicenseKeyRead) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *LicenseKeyRead) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *LicenseKeyRead) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *LicenseKeyRead) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *LicenseKeyRead) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *LicenseKeyRead) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *LicenseKeyRead) GetUser() LicenseKeyUser {
	if o == nil {
		return LicenseKeyUser{}
	}
	return o.User
}

func (o *LicenseKeyRead) GetCustomer() LicenseKeyCustomer {
	if o == nil {
		return LicenseKeyCustomer{}
	}
	return o.Customer
}

func (o *LicenseKeyRead) GetBenefitID() string {
	if o == nil {
		return ""
	}
	return o.BenefitID
}

func (o *LicenseKeyRead) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *LicenseKeyRead) GetDisplayKey() string {
	if o == nil {
		return ""
	}
	return o.DisplayKey
}

func (o *LicenseKeyRead) GetStatus() LicenseKeyStatus {
	if o == nil {
		return LicenseKeyStatus("")
	}
	return o.Status
}

func (o *LicenseKeyRead) GetLimitActivations() *int64 {
	if o == nil {
		return nil
	}
	return o.LimitActivations
}

func (o *LicenseKeyRead) GetUsage() int64 {
	if o == nil {
		return 0
	}
	return o.Usage
}

func (o *LicenseKeyRead) GetLimitUsage() *int64 {
	if o == nil {
		return nil
	}
	return o.LimitUsage
}

func (o *LicenseKeyRead) GetValidations() int64 {
	if o == nil {
		return 0
	}
	return o.Validations
}

func (o *LicenseKeyRead) GetLastValidatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastValidatedAt
}

func (o *LicenseKeyRead) GetExpiresAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ExpiresAt
}
