// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type SubscriptionSortProperty string

const (
	SubscriptionSortPropertyCustomer              SubscriptionSortProperty = "customer"
	SubscriptionSortPropertyMinusCustomer         SubscriptionSortProperty = "-customer"
	SubscriptionSortPropertyStatus                SubscriptionSortProperty = "status"
	SubscriptionSortPropertyMinusStatus           SubscriptionSortProperty = "-status"
	SubscriptionSortPropertyStartedAt             SubscriptionSortProperty = "started_at"
	SubscriptionSortPropertyMinusStartedAt        SubscriptionSortProperty = "-started_at"
	SubscriptionSortPropertyCurrentPeriodEnd      SubscriptionSortProperty = "current_period_end"
	SubscriptionSortPropertyMinusCurrentPeriodEnd SubscriptionSortProperty = "-current_period_end"
	SubscriptionSortPropertyAmount                SubscriptionSortProperty = "amount"
	SubscriptionSortPropertyMinusAmount           SubscriptionSortProperty = "-amount"
	SubscriptionSortPropertyProduct               SubscriptionSortProperty = "product"
	SubscriptionSortPropertyMinusProduct          SubscriptionSortProperty = "-product"
	SubscriptionSortPropertyDiscount              SubscriptionSortProperty = "discount"
	SubscriptionSortPropertyMinusDiscount         SubscriptionSortProperty = "-discount"
)

func (e SubscriptionSortProperty) ToPointer() *SubscriptionSortProperty {
	return &e
}
func (e *SubscriptionSortProperty) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "customer":
		fallthrough
	case "-customer":
		fallthrough
	case "status":
		fallthrough
	case "-status":
		fallthrough
	case "started_at":
		fallthrough
	case "-started_at":
		fallthrough
	case "current_period_end":
		fallthrough
	case "-current_period_end":
		fallthrough
	case "amount":
		fallthrough
	case "-amount":
		fallthrough
	case "product":
		fallthrough
	case "-product":
		fallthrough
	case "discount":
		fallthrough
	case "-discount":
		*e = SubscriptionSortProperty(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SubscriptionSortProperty: %v", v)
	}
}
