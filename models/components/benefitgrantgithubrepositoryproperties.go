// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type BenefitGrantGitHubRepositoryPropertiesPermission string

const (
	BenefitGrantGitHubRepositoryPropertiesPermissionPull     BenefitGrantGitHubRepositoryPropertiesPermission = "pull"
	BenefitGrantGitHubRepositoryPropertiesPermissionTriage   BenefitGrantGitHubRepositoryPropertiesPermission = "triage"
	BenefitGrantGitHubRepositoryPropertiesPermissionPush     BenefitGrantGitHubRepositoryPropertiesPermission = "push"
	BenefitGrantGitHubRepositoryPropertiesPermissionMaintain BenefitGrantGitHubRepositoryPropertiesPermission = "maintain"
	BenefitGrantGitHubRepositoryPropertiesPermissionAdmin    BenefitGrantGitHubRepositoryPropertiesPermission = "admin"
)

func (e BenefitGrantGitHubRepositoryPropertiesPermission) ToPointer() *BenefitGrantGitHubRepositoryPropertiesPermission {
	return &e
}
func (e *BenefitGrantGitHubRepositoryPropertiesPermission) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pull":
		fallthrough
	case "triage":
		fallthrough
	case "push":
		fallthrough
	case "maintain":
		fallthrough
	case "admin":
		*e = BenefitGrantGitHubRepositoryPropertiesPermission(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BenefitGrantGitHubRepositoryPropertiesPermission: %v", v)
	}
}

type BenefitGrantGitHubRepositoryProperties struct {
	AccountID       *string                                           `json:"account_id,omitempty"`
	RepositoryOwner *string                                           `json:"repository_owner,omitempty"`
	RepositoryName  *string                                           `json:"repository_name,omitempty"`
	Permission      *BenefitGrantGitHubRepositoryPropertiesPermission `json:"permission,omitempty"`
}

func (o *BenefitGrantGitHubRepositoryProperties) GetAccountID() *string {
	if o == nil {
		return nil
	}
	return o.AccountID
}

func (o *BenefitGrantGitHubRepositoryProperties) GetRepositoryOwner() *string {
	if o == nil {
		return nil
	}
	return o.RepositoryOwner
}

func (o *BenefitGrantGitHubRepositoryProperties) GetRepositoryName() *string {
	if o == nil {
		return nil
	}
	return o.RepositoryName
}

func (o *BenefitGrantGitHubRepositoryProperties) GetPermission() *BenefitGrantGitHubRepositoryPropertiesPermission {
	if o == nil {
		return nil
	}
	return o.Permission
}
