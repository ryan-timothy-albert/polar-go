// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type OrderSortProperty string

const (
	OrderSortPropertyCreatedAt         OrderSortProperty = "created_at"
	OrderSortPropertyMinusCreatedAt    OrderSortProperty = "-created_at"
	OrderSortPropertyAmount            OrderSortProperty = "amount"
	OrderSortPropertyMinusAmount       OrderSortProperty = "-amount"
	OrderSortPropertyCustomer          OrderSortProperty = "customer"
	OrderSortPropertyMinusCustomer     OrderSortProperty = "-customer"
	OrderSortPropertyProduct           OrderSortProperty = "product"
	OrderSortPropertyMinusProduct      OrderSortProperty = "-product"
	OrderSortPropertyDiscount          OrderSortProperty = "discount"
	OrderSortPropertyMinusDiscount     OrderSortProperty = "-discount"
	OrderSortPropertySubscription      OrderSortProperty = "subscription"
	OrderSortPropertyMinusSubscription OrderSortProperty = "-subscription"
)

func (e OrderSortProperty) ToPointer() *OrderSortProperty {
	return &e
}
func (e *OrderSortProperty) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created_at":
		fallthrough
	case "-created_at":
		fallthrough
	case "amount":
		fallthrough
	case "-amount":
		fallthrough
	case "customer":
		fallthrough
	case "-customer":
		fallthrough
	case "product":
		fallthrough
	case "-product":
		fallthrough
	case "discount":
		fallthrough
	case "-discount":
		fallthrough
	case "subscription":
		fallthrough
	case "-subscription":
		*e = OrderSortProperty(v)
		return nil
	default:
		return fmt.Errorf("invalid value for OrderSortProperty: %v", v)
	}
}
