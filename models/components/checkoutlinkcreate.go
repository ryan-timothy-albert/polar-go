// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
)

type CheckoutLinkCreateType string

const (
	CheckoutLinkCreateTypeCheckoutLinkProductCreate CheckoutLinkCreateType = "CheckoutLinkProductCreate"
	CheckoutLinkCreateTypeCheckoutLinkPriceCreate   CheckoutLinkCreateType = "CheckoutLinkPriceCreate"
)

type CheckoutLinkCreate struct {
	CheckoutLinkProductCreate *CheckoutLinkProductCreate `queryParam:"inline"`
	CheckoutLinkPriceCreate   *CheckoutLinkPriceCreate   `queryParam:"inline"`

	Type CheckoutLinkCreateType
}

func CreateCheckoutLinkCreateCheckoutLinkProductCreate(checkoutLinkProductCreate CheckoutLinkProductCreate) CheckoutLinkCreate {
	typ := CheckoutLinkCreateTypeCheckoutLinkProductCreate

	return CheckoutLinkCreate{
		CheckoutLinkProductCreate: &checkoutLinkProductCreate,
		Type:                      typ,
	}
}

func CreateCheckoutLinkCreateCheckoutLinkPriceCreate(checkoutLinkPriceCreate CheckoutLinkPriceCreate) CheckoutLinkCreate {
	typ := CheckoutLinkCreateTypeCheckoutLinkPriceCreate

	return CheckoutLinkCreate{
		CheckoutLinkPriceCreate: &checkoutLinkPriceCreate,
		Type:                    typ,
	}
}

func (u *CheckoutLinkCreate) UnmarshalJSON(data []byte) error {

	var checkoutLinkProductCreate CheckoutLinkProductCreate = CheckoutLinkProductCreate{}
	if err := utils.UnmarshalJSON(data, &checkoutLinkProductCreate, "", true, true); err == nil {
		u.CheckoutLinkProductCreate = &checkoutLinkProductCreate
		u.Type = CheckoutLinkCreateTypeCheckoutLinkProductCreate
		return nil
	}

	var checkoutLinkPriceCreate CheckoutLinkPriceCreate = CheckoutLinkPriceCreate{}
	if err := utils.UnmarshalJSON(data, &checkoutLinkPriceCreate, "", true, true); err == nil {
		u.CheckoutLinkPriceCreate = &checkoutLinkPriceCreate
		u.Type = CheckoutLinkCreateTypeCheckoutLinkPriceCreate
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CheckoutLinkCreate", string(data))
}

func (u CheckoutLinkCreate) MarshalJSON() ([]byte, error) {
	if u.CheckoutLinkProductCreate != nil {
		return utils.MarshalJSON(u.CheckoutLinkProductCreate, "", true)
	}

	if u.CheckoutLinkPriceCreate != nil {
		return utils.MarshalJSON(u.CheckoutLinkPriceCreate, "", true)
	}

	return nil, errors.New("could not marshal union type CheckoutLinkCreate: all fields are null")
}
