// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"polar/internal/utils"
)

type WebhookOrderCreatedPayloadType string

const (
	WebhookOrderCreatedPayloadTypeOrderCreated WebhookOrderCreatedPayloadType = "order.created"
)

func (e WebhookOrderCreatedPayloadType) ToPointer() *WebhookOrderCreatedPayloadType {
	return &e
}
func (e *WebhookOrderCreatedPayloadType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "order.created":
		*e = WebhookOrderCreatedPayloadType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookOrderCreatedPayloadType: %v", v)
	}
}

// WebhookOrderCreatedPayload - Sent when a new order is created.
//
// **Discord & Slack support:** Full
type WebhookOrderCreatedPayload struct {
	type_ WebhookOrderCreatedPayloadType `const:"order.created" json:"type"`
	Data  Order                          `json:"data"`
}

func (w WebhookOrderCreatedPayload) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookOrderCreatedPayload) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WebhookOrderCreatedPayload) GetType() WebhookOrderCreatedPayloadType {
	return WebhookOrderCreatedPayloadTypeOrderCreated
}

func (o *WebhookOrderCreatedPayload) GetData() Order {
	if o == nil {
		return Order{}
	}
	return o.Data
}
