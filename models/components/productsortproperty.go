// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type ProductSortProperty string

const (
	ProductSortPropertyCreatedAt            ProductSortProperty = "created_at"
	ProductSortPropertyMinusCreatedAt       ProductSortProperty = "-created_at"
	ProductSortPropertyName                 ProductSortProperty = "name"
	ProductSortPropertyMinusName            ProductSortProperty = "-name"
	ProductSortPropertyPriceType            ProductSortProperty = "price_type"
	ProductSortPropertyMinusPriceType       ProductSortProperty = "-price_type"
	ProductSortPropertyPriceAmountType      ProductSortProperty = "price_amount_type"
	ProductSortPropertyMinusPriceAmountType ProductSortProperty = "-price_amount_type"
	ProductSortPropertyPriceAmount          ProductSortProperty = "price_amount"
	ProductSortPropertyMinusPriceAmount     ProductSortProperty = "-price_amount"
)

func (e ProductSortProperty) ToPointer() *ProductSortProperty {
	return &e
}
func (e *ProductSortProperty) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created_at":
		fallthrough
	case "-created_at":
		fallthrough
	case "name":
		fallthrough
	case "-name":
		fallthrough
	case "price_type":
		fallthrough
	case "-price_type":
		fallthrough
	case "price_amount_type":
		fallthrough
	case "-price_amount_type":
		fallthrough
	case "price_amount":
		fallthrough
	case "-price_amount":
		*e = ProductSortProperty(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ProductSortProperty: %v", v)
	}
}
