// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"polar/internal/utils"
	"time"
)

type BenefitCustomType string

const (
	BenefitCustomTypeCustom BenefitCustomType = "custom"
)

func (e BenefitCustomType) ToPointer() *BenefitCustomType {
	return &e
}
func (e *BenefitCustomType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "custom":
		*e = BenefitCustomType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BenefitCustomType: %v", v)
	}
}

// BenefitCustom - A benefit of type `custom`.
//
// Use it to grant any kind of benefit that doesn't fit in the other types.
type BenefitCustom struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	// The ID of the benefit.
	ID    string            `json:"id"`
	type_ BenefitCustomType `const:"custom" json:"type"`
	// The description of the benefit.
	Description string `json:"description"`
	// Whether the benefit is selectable when creating a product.
	Selectable bool `json:"selectable"`
	// Whether the benefit is deletable.
	Deletable bool `json:"deletable"`
	// The ID of the organization owning the benefit.
	OrganizationID string `json:"organization_id"`
	// Properties for a benefit of type `custom`.
	Properties BenefitCustomProperties `json:"properties"`
	// Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	IsTaxApplicable bool `json:"is_tax_applicable"`
}

func (b BenefitCustom) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BenefitCustom) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *BenefitCustom) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *BenefitCustom) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *BenefitCustom) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *BenefitCustom) GetType() BenefitCustomType {
	return BenefitCustomTypeCustom
}

func (o *BenefitCustom) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *BenefitCustom) GetSelectable() bool {
	if o == nil {
		return false
	}
	return o.Selectable
}

func (o *BenefitCustom) GetDeletable() bool {
	if o == nil {
		return false
	}
	return o.Deletable
}

func (o *BenefitCustom) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *BenefitCustom) GetProperties() BenefitCustomProperties {
	if o == nil {
		return BenefitCustomProperties{}
	}
	return o.Properties
}

func (o *BenefitCustom) GetIsTaxApplicable() bool {
	if o == nil {
		return false
	}
	return o.IsTaxApplicable
}
