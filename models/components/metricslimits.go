// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
	"github.com/polarsource/polar-go/types"
)

// MetricsLimits - Date limits to get metrics.
type MetricsLimits struct {
	// Minimum date to get metrics.
	MinDate types.Date `json:"min_date"`
	// Date interval limits to get metrics for each interval.
	Intervals MetricsIntervalsLimits `json:"intervals"`
}

func (m MetricsLimits) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MetricsLimits) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MetricsLimits) GetMinDate() types.Date {
	if o == nil {
		return types.Date{}
	}
	return o.MinDate
}

func (o *MetricsLimits) GetIntervals() MetricsIntervalsLimits {
	if o == nil {
		return MetricsIntervalsLimits{}
	}
	return o.Intervals
}
