// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CustomerBenefitGrantSortProperty string

const (
	CustomerBenefitGrantSortPropertyGrantedAt         CustomerBenefitGrantSortProperty = "granted_at"
	CustomerBenefitGrantSortPropertyMinusGrantedAt    CustomerBenefitGrantSortProperty = "-granted_at"
	CustomerBenefitGrantSortPropertyType              CustomerBenefitGrantSortProperty = "type"
	CustomerBenefitGrantSortPropertyMinusType         CustomerBenefitGrantSortProperty = "-type"
	CustomerBenefitGrantSortPropertyOrganization      CustomerBenefitGrantSortProperty = "organization"
	CustomerBenefitGrantSortPropertyMinusOrganization CustomerBenefitGrantSortProperty = "-organization"
)

func (e CustomerBenefitGrantSortProperty) ToPointer() *CustomerBenefitGrantSortProperty {
	return &e
}
func (e *CustomerBenefitGrantSortProperty) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "granted_at":
		fallthrough
	case "-granted_at":
		fallthrough
	case "type":
		fallthrough
	case "-type":
		fallthrough
	case "organization":
		fallthrough
	case "-organization":
		*e = CustomerBenefitGrantSortProperty(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerBenefitGrantSortProperty: %v", v)
	}
}
