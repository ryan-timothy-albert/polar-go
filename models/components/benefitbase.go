// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
	"time"
)

type BenefitBase struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	// The ID of the benefit.
	ID   string      `json:"id"`
	Type BenefitType `json:"type"`
	// The description of the benefit.
	Description string `json:"description"`
	// Whether the benefit is selectable when creating a product.
	Selectable bool `json:"selectable"`
	// Whether the benefit is deletable.
	Deletable bool `json:"deletable"`
	// The ID of the organization owning the benefit.
	OrganizationID string `json:"organization_id"`
}

func (b BenefitBase) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BenefitBase) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BenefitBase) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *BenefitBase) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *BenefitBase) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *BenefitBase) GetType() BenefitType {
	if o == nil {
		return BenefitType("")
	}
	return o.Type
}

func (o *BenefitBase) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *BenefitBase) GetSelectable() bool {
	if o == nil {
		return false
	}
	return o.Selectable
}

func (o *BenefitBase) GetDeletable() bool {
	if o == nil {
		return false
	}
	return o.Deletable
}

func (o *BenefitBase) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}
