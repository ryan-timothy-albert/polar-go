// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
)

type AuthorizeResponseOrganizationSubType string

const (
	AuthorizeResponseOrganizationSubTypeOrganization AuthorizeResponseOrganizationSubType = "organization"
)

func (e AuthorizeResponseOrganizationSubType) ToPointer() *AuthorizeResponseOrganizationSubType {
	return &e
}
func (e *AuthorizeResponseOrganizationSubType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "organization":
		*e = AuthorizeResponseOrganizationSubType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthorizeResponseOrganizationSubType: %v", v)
	}
}

type AuthorizeResponseOrganization struct {
	Client        OAuth2ClientPublic                   `json:"client"`
	subType       AuthorizeResponseOrganizationSubType `const:"organization" json:"sub_type"`
	Sub           *AuthorizeOrganization               `json:"sub"`
	Scopes        []Scope                              `json:"scopes"`
	Organizations []AuthorizeOrganization              `json:"organizations"`
}

func (a AuthorizeResponseOrganization) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AuthorizeResponseOrganization) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *AuthorizeResponseOrganization) GetClient() OAuth2ClientPublic {
	if o == nil {
		return OAuth2ClientPublic{}
	}
	return o.Client
}

func (o *AuthorizeResponseOrganization) GetSubType() AuthorizeResponseOrganizationSubType {
	return AuthorizeResponseOrganizationSubTypeOrganization
}

func (o *AuthorizeResponseOrganization) GetSub() *AuthorizeOrganization {
	if o == nil {
		return nil
	}
	return o.Sub
}

func (o *AuthorizeResponseOrganization) GetScopes() []Scope {
	if o == nil {
		return []Scope{}
	}
	return o.Scopes
}

func (o *AuthorizeResponseOrganization) GetOrganizations() []AuthorizeOrganization {
	if o == nil {
		return []AuthorizeOrganization{}
	}
	return o.Organizations
}
