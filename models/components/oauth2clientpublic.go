// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
	"time"
)

type OAuth2ClientPublic struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	ClientID   string     `json:"client_id"`
	ClientName *string    `json:"client_name"`
	ClientURI  *string    `json:"client_uri"`
	LogoURI    *string    `json:"logo_uri"`
	TosURI     *string    `json:"tos_uri"`
	PolicyURI  *string    `json:"policy_uri"`
}

func (o OAuth2ClientPublic) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OAuth2ClientPublic) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *OAuth2ClientPublic) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *OAuth2ClientPublic) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *OAuth2ClientPublic) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *OAuth2ClientPublic) GetClientName() *string {
	if o == nil {
		return nil
	}
	return o.ClientName
}

func (o *OAuth2ClientPublic) GetClientURI() *string {
	if o == nil {
		return nil
	}
	return o.ClientURI
}

func (o *OAuth2ClientPublic) GetLogoURI() *string {
	if o == nil {
		return nil
	}
	return o.LogoURI
}

func (o *OAuth2ClientPublic) GetTosURI() *string {
	if o == nil {
		return nil
	}
	return o.TosURI
}

func (o *OAuth2ClientPublic) GetPolicyURI() *string {
	if o == nil {
		return nil
	}
	return o.PolicyURI
}
