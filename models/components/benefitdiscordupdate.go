// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"polar/internal/utils"
)

type BenefitDiscordUpdateType string

const (
	BenefitDiscordUpdateTypeDiscord BenefitDiscordUpdateType = "discord"
)

func (e BenefitDiscordUpdateType) ToPointer() *BenefitDiscordUpdateType {
	return &e
}
func (e *BenefitDiscordUpdateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "discord":
		*e = BenefitDiscordUpdateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BenefitDiscordUpdateType: %v", v)
	}
}

type BenefitDiscordUpdate struct {
	// The description of the benefit. Will be displayed on products having this benefit.
	Description *string                         `json:"description,omitempty"`
	type_       BenefitDiscordUpdateType        `const:"discord" json:"type"`
	Properties  *BenefitDiscordCreateProperties `json:"properties,omitempty"`
}

func (b BenefitDiscordUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BenefitDiscordUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *BenefitDiscordUpdate) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *BenefitDiscordUpdate) GetType() BenefitDiscordUpdateType {
	return BenefitDiscordUpdateTypeDiscord
}

func (o *BenefitDiscordUpdate) GetProperties() *BenefitDiscordCreateProperties {
	if o == nil {
		return nil
	}
	return o.Properties
}
