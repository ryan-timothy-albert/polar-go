// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
	"time"
)

type PropertiesType string

const (
	PropertiesTypeBenefitGrantDiscordProperties          PropertiesType = "BenefitGrantDiscordProperties"
	PropertiesTypeBenefitGrantGitHubRepositoryProperties PropertiesType = "BenefitGrantGitHubRepositoryProperties"
	PropertiesTypeBenefitGrantDownloadablesProperties    PropertiesType = "BenefitGrantDownloadablesProperties"
	PropertiesTypeBenefitGrantLicenseKeysProperties      PropertiesType = "BenefitGrantLicenseKeysProperties"
	PropertiesTypeBenefitGrantAdsProperties              PropertiesType = "BenefitGrantAdsProperties"
	PropertiesTypeBenefitGrantCustomProperties           PropertiesType = "BenefitGrantCustomProperties"
)

type Properties struct {
	BenefitGrantDiscordProperties          *BenefitGrantDiscordProperties          `queryParam:"inline"`
	BenefitGrantGitHubRepositoryProperties *BenefitGrantGitHubRepositoryProperties `queryParam:"inline"`
	BenefitGrantDownloadablesProperties    *BenefitGrantDownloadablesProperties    `queryParam:"inline"`
	BenefitGrantLicenseKeysProperties      *BenefitGrantLicenseKeysProperties      `queryParam:"inline"`
	BenefitGrantAdsProperties              *BenefitGrantAdsProperties              `queryParam:"inline"`
	BenefitGrantCustomProperties           *BenefitGrantCustomProperties           `queryParam:"inline"`

	Type PropertiesType
}

func CreatePropertiesBenefitGrantDiscordProperties(benefitGrantDiscordProperties BenefitGrantDiscordProperties) Properties {
	typ := PropertiesTypeBenefitGrantDiscordProperties

	return Properties{
		BenefitGrantDiscordProperties: &benefitGrantDiscordProperties,
		Type:                          typ,
	}
}

func CreatePropertiesBenefitGrantGitHubRepositoryProperties(benefitGrantGitHubRepositoryProperties BenefitGrantGitHubRepositoryProperties) Properties {
	typ := PropertiesTypeBenefitGrantGitHubRepositoryProperties

	return Properties{
		BenefitGrantGitHubRepositoryProperties: &benefitGrantGitHubRepositoryProperties,
		Type:                                   typ,
	}
}

func CreatePropertiesBenefitGrantDownloadablesProperties(benefitGrantDownloadablesProperties BenefitGrantDownloadablesProperties) Properties {
	typ := PropertiesTypeBenefitGrantDownloadablesProperties

	return Properties{
		BenefitGrantDownloadablesProperties: &benefitGrantDownloadablesProperties,
		Type:                                typ,
	}
}

func CreatePropertiesBenefitGrantLicenseKeysProperties(benefitGrantLicenseKeysProperties BenefitGrantLicenseKeysProperties) Properties {
	typ := PropertiesTypeBenefitGrantLicenseKeysProperties

	return Properties{
		BenefitGrantLicenseKeysProperties: &benefitGrantLicenseKeysProperties,
		Type:                              typ,
	}
}

func CreatePropertiesBenefitGrantAdsProperties(benefitGrantAdsProperties BenefitGrantAdsProperties) Properties {
	typ := PropertiesTypeBenefitGrantAdsProperties

	return Properties{
		BenefitGrantAdsProperties: &benefitGrantAdsProperties,
		Type:                      typ,
	}
}

func CreatePropertiesBenefitGrantCustomProperties(benefitGrantCustomProperties BenefitGrantCustomProperties) Properties {
	typ := PropertiesTypeBenefitGrantCustomProperties

	return Properties{
		BenefitGrantCustomProperties: &benefitGrantCustomProperties,
		Type:                         typ,
	}
}

func (u *Properties) UnmarshalJSON(data []byte) error {

	var benefitGrantCustomProperties BenefitGrantCustomProperties = BenefitGrantCustomProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantCustomProperties, "", true, true); err == nil {
		u.BenefitGrantCustomProperties = &benefitGrantCustomProperties
		u.Type = PropertiesTypeBenefitGrantCustomProperties
		return nil
	}

	var benefitGrantDownloadablesProperties BenefitGrantDownloadablesProperties = BenefitGrantDownloadablesProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantDownloadablesProperties, "", true, true); err == nil {
		u.BenefitGrantDownloadablesProperties = &benefitGrantDownloadablesProperties
		u.Type = PropertiesTypeBenefitGrantDownloadablesProperties
		return nil
	}

	var benefitGrantAdsProperties BenefitGrantAdsProperties = BenefitGrantAdsProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantAdsProperties, "", true, true); err == nil {
		u.BenefitGrantAdsProperties = &benefitGrantAdsProperties
		u.Type = PropertiesTypeBenefitGrantAdsProperties
		return nil
	}

	var benefitGrantLicenseKeysProperties BenefitGrantLicenseKeysProperties = BenefitGrantLicenseKeysProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantLicenseKeysProperties, "", true, true); err == nil {
		u.BenefitGrantLicenseKeysProperties = &benefitGrantLicenseKeysProperties
		u.Type = PropertiesTypeBenefitGrantLicenseKeysProperties
		return nil
	}

	var benefitGrantDiscordProperties BenefitGrantDiscordProperties = BenefitGrantDiscordProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantDiscordProperties, "", true, true); err == nil {
		u.BenefitGrantDiscordProperties = &benefitGrantDiscordProperties
		u.Type = PropertiesTypeBenefitGrantDiscordProperties
		return nil
	}

	var benefitGrantGitHubRepositoryProperties BenefitGrantGitHubRepositoryProperties = BenefitGrantGitHubRepositoryProperties{}
	if err := utils.UnmarshalJSON(data, &benefitGrantGitHubRepositoryProperties, "", true, true); err == nil {
		u.BenefitGrantGitHubRepositoryProperties = &benefitGrantGitHubRepositoryProperties
		u.Type = PropertiesTypeBenefitGrantGitHubRepositoryProperties
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for Properties", string(data))
}

func (u Properties) MarshalJSON() ([]byte, error) {
	if u.BenefitGrantDiscordProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantDiscordProperties, "", true)
	}

	if u.BenefitGrantGitHubRepositoryProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantGitHubRepositoryProperties, "", true)
	}

	if u.BenefitGrantDownloadablesProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantDownloadablesProperties, "", true)
	}

	if u.BenefitGrantLicenseKeysProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantLicenseKeysProperties, "", true)
	}

	if u.BenefitGrantAdsProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantAdsProperties, "", true)
	}

	if u.BenefitGrantCustomProperties != nil {
		return utils.MarshalJSON(u.BenefitGrantCustomProperties, "", true)
	}

	return nil, errors.New("could not marshal union type Properties: all fields are null")
}

type BenefitGrant struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	// The ID of the grant.
	ID string `json:"id"`
	// The timestamp when the benefit was granted. If `None`, the benefit is not granted.
	GrantedAt *time.Time `json:"granted_at,omitempty"`
	// Whether the benefit is granted.
	IsGranted bool `json:"is_granted"`
	// The timestamp when the benefit was revoked. If `None`, the benefit is not revoked.
	RevokedAt *time.Time `json:"revoked_at,omitempty"`
	// Whether the benefit is revoked.
	IsRevoked bool `json:"is_revoked"`
	// The ID of the subscription that granted this benefit.
	SubscriptionID *string `json:"subscription_id"`
	// The ID of the order that granted this benefit.
	OrderID *string `json:"order_id"`
	// The ID of the customer concerned by this grant.
	CustomerID string `json:"customer_id"`
	// Deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
	UserID string `json:"user_id"`
	// The ID of the benefit concerned by this grant.
	BenefitID  string     `json:"benefit_id"`
	Properties Properties `json:"properties"`
}

func (b BenefitGrant) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BenefitGrant) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BenefitGrant) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *BenefitGrant) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *BenefitGrant) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *BenefitGrant) GetGrantedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.GrantedAt
}

func (o *BenefitGrant) GetIsGranted() bool {
	if o == nil {
		return false
	}
	return o.IsGranted
}

func (o *BenefitGrant) GetRevokedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.RevokedAt
}

func (o *BenefitGrant) GetIsRevoked() bool {
	if o == nil {
		return false
	}
	return o.IsRevoked
}

func (o *BenefitGrant) GetSubscriptionID() *string {
	if o == nil {
		return nil
	}
	return o.SubscriptionID
}

func (o *BenefitGrant) GetOrderID() *string {
	if o == nil {
		return nil
	}
	return o.OrderID
}

func (o *BenefitGrant) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *BenefitGrant) GetUserID() string {
	if o == nil {
		return ""
	}
	return o.UserID
}

func (o *BenefitGrant) GetBenefitID() string {
	if o == nil {
		return ""
	}
	return o.BenefitID
}

func (o *BenefitGrant) GetProperties() Properties {
	if o == nil {
		return Properties{}
	}
	return o.Properties
}
