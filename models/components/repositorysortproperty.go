// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type RepositorySortProperty string

const (
	RepositorySortPropertyCreatedAt      RepositorySortProperty = "created_at"
	RepositorySortPropertyMinusCreatedAt RepositorySortProperty = "-created_at"
	RepositorySortPropertyName           RepositorySortProperty = "name"
	RepositorySortPropertyMinusName      RepositorySortProperty = "-name"
	RepositorySortPropertyStars          RepositorySortProperty = "stars"
	RepositorySortPropertyMinusStars     RepositorySortProperty = "-stars"
)

func (e RepositorySortProperty) ToPointer() *RepositorySortProperty {
	return &e
}
func (e *RepositorySortProperty) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created_at":
		fallthrough
	case "-created_at":
		fallthrough
	case "name":
		fallthrough
	case "-name":
		fallthrough
	case "stars":
		fallthrough
	case "-stars":
		*e = RepositorySortProperty(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RepositorySortProperty: %v", v)
	}
}
