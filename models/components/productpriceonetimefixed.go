// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
	"time"
)

// ProductPriceOneTimeFixed - A one-time price for a product.
type ProductPriceOneTimeFixed struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	// The ID of the price.
	ID         string `json:"id"`
	amountType string `const:"fixed" json:"amount_type"`
	// Whether the price is archived and no longer available.
	IsArchived bool `json:"is_archived"`
	// The ID of the product owning the price.
	ProductID string `json:"product_id"`
	// The currency.
	PriceCurrency string `json:"price_currency"`
	// The price in cents.
	PriceAmount int64 `json:"price_amount"`
	// The type of the price.
	type_ string `const:"one_time" json:"type"`
}

func (p ProductPriceOneTimeFixed) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *ProductPriceOneTimeFixed) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *ProductPriceOneTimeFixed) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *ProductPriceOneTimeFixed) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *ProductPriceOneTimeFixed) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *ProductPriceOneTimeFixed) GetAmountType() string {
	return "fixed"
}

func (o *ProductPriceOneTimeFixed) GetIsArchived() bool {
	if o == nil {
		return false
	}
	return o.IsArchived
}

func (o *ProductPriceOneTimeFixed) GetProductID() string {
	if o == nil {
		return ""
	}
	return o.ProductID
}

func (o *ProductPriceOneTimeFixed) GetPriceCurrency() string {
	if o == nil {
		return ""
	}
	return o.PriceCurrency
}

func (o *ProductPriceOneTimeFixed) GetPriceAmount() int64 {
	if o == nil {
		return 0
	}
	return o.PriceAmount
}

func (o *ProductPriceOneTimeFixed) GetType() string {
	return "one_time"
}
