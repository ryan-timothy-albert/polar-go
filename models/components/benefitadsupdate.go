// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"polar/internal/utils"
)

type BenefitAdsUpdateType string

const (
	BenefitAdsUpdateTypeAds BenefitAdsUpdateType = "ads"
)

func (e BenefitAdsUpdateType) ToPointer() *BenefitAdsUpdateType {
	return &e
}
func (e *BenefitAdsUpdateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ads":
		*e = BenefitAdsUpdateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BenefitAdsUpdateType: %v", v)
	}
}

type BenefitAdsUpdate struct {
	// The description of the benefit. Will be displayed on products having this benefit.
	Description *string               `json:"description,omitempty"`
	type_       BenefitAdsUpdateType  `const:"ads" json:"type"`
	Properties  *BenefitAdsProperties `json:"properties,omitempty"`
}

func (b BenefitAdsUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BenefitAdsUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, true); err != nil {
		return err
	}
	return nil
}

func (o *BenefitAdsUpdate) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *BenefitAdsUpdate) GetType() BenefitAdsUpdateType {
	return BenefitAdsUpdateTypeAds
}

func (o *BenefitAdsUpdate) GetProperties() *BenefitAdsProperties {
	if o == nil {
		return nil
	}
	return o.Properties
}
