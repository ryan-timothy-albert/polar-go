// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
)

type BenefitCustomCreateType string

const (
	BenefitCustomCreateTypeCustom BenefitCustomCreateType = "custom"
)

func (e BenefitCustomCreateType) ToPointer() *BenefitCustomCreateType {
	return &e
}
func (e *BenefitCustomCreateType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "custom":
		*e = BenefitCustomCreateType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BenefitCustomCreateType: %v", v)
	}
}

// BenefitCustomCreate - Schema to create a benefit of type `custom`.
type BenefitCustomCreate struct {
	type_ BenefitCustomCreateType `const:"custom" json:"type"`
	// The description of the benefit. Will be displayed on products having this benefit.
	Description string `json:"description"`
	// The ID of the organization owning the benefit. **Required unless you use an organization token.**
	OrganizationID *string `json:"organization_id,omitempty"`
	// Properties for creating a benefit of type `custom`.
	Properties BenefitCustomCreateProperties `json:"properties"`
}

func (b BenefitCustomCreate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(b, "", false)
}

func (b *BenefitCustomCreate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &b, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *BenefitCustomCreate) GetType() BenefitCustomCreateType {
	return BenefitCustomCreateTypeCustom
}

func (o *BenefitCustomCreate) GetDescription() string {
	if o == nil {
		return ""
	}
	return o.Description
}

func (o *BenefitCustomCreate) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *BenefitCustomCreate) GetProperties() BenefitCustomCreateProperties {
	if o == nil {
		return BenefitCustomCreateProperties{}
	}
	return o.Properties
}
