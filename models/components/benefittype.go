// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type BenefitType string

const (
	BenefitTypeCustom           BenefitType = "custom"
	BenefitTypeAds              BenefitType = "ads"
	BenefitTypeDiscord          BenefitType = "discord"
	BenefitTypeGithubRepository BenefitType = "github_repository"
	BenefitTypeDownloadables    BenefitType = "downloadables"
	BenefitTypeLicenseKeys      BenefitType = "license_keys"
)

func (e BenefitType) ToPointer() *BenefitType {
	return &e
}
func (e *BenefitType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "custom":
		fallthrough
	case "ads":
		fallthrough
	case "discord":
		fallthrough
	case "github_repository":
		fallthrough
	case "downloadables":
		fallthrough
	case "license_keys":
		*e = BenefitType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BenefitType: %v", v)
	}
}
