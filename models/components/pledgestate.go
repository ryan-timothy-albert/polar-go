// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type PledgeState string

const (
	PledgeStateInitiated      PledgeState = "initiated"
	PledgeStateCreated        PledgeState = "created"
	PledgeStatePending        PledgeState = "pending"
	PledgeStateRefunded       PledgeState = "refunded"
	PledgeStateDisputed       PledgeState = "disputed"
	PledgeStateChargeDisputed PledgeState = "charge_disputed"
	PledgeStateCancelled      PledgeState = "cancelled"
)

func (e PledgeState) ToPointer() *PledgeState {
	return &e
}
func (e *PledgeState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "initiated":
		fallthrough
	case "created":
		fallthrough
	case "pending":
		fallthrough
	case "refunded":
		fallthrough
	case "disputed":
		fallthrough
	case "charge_disputed":
		fallthrough
	case "cancelled":
		*e = PledgeState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PledgeState: %v", v)
	}
}
