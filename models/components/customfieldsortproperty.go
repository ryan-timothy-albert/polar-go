// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CustomFieldSortProperty string

const (
	CustomFieldSortPropertyCreatedAt      CustomFieldSortProperty = "created_at"
	CustomFieldSortPropertyMinusCreatedAt CustomFieldSortProperty = "-created_at"
	CustomFieldSortPropertySlug           CustomFieldSortProperty = "slug"
	CustomFieldSortPropertyMinusSlug      CustomFieldSortProperty = "-slug"
	CustomFieldSortPropertyName           CustomFieldSortProperty = "name"
	CustomFieldSortPropertyMinusName      CustomFieldSortProperty = "-name"
	CustomFieldSortPropertyType           CustomFieldSortProperty = "type"
	CustomFieldSortPropertyMinusType      CustomFieldSortProperty = "-type"
)

func (e CustomFieldSortProperty) ToPointer() *CustomFieldSortProperty {
	return &e
}
func (e *CustomFieldSortProperty) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "created_at":
		fallthrough
	case "-created_at":
		fallthrough
	case "slug":
		fallthrough
	case "-slug":
		fallthrough
	case "name":
		fallthrough
	case "-name":
		fallthrough
	case "type":
		fallthrough
	case "-type":
		*e = CustomFieldSortProperty(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomFieldSortProperty: %v", v)
	}
}
