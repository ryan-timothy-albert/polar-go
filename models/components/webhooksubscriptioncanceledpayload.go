// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
)

// WebhookSubscriptionCanceledPayload - Sent when a subscription is canceled by the user.
// They might still have access until the end of the current period.
//
// **Discord & Slack support:** Full
type WebhookSubscriptionCanceledPayload struct {
	type_ string       `const:"subscription.canceled" json:"type"`
	Data  Subscription `json:"data"`
}

func (w WebhookSubscriptionCanceledPayload) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookSubscriptionCanceledPayload) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WebhookSubscriptionCanceledPayload) GetType() string {
	return "subscription.canceled"
}

func (o *WebhookSubscriptionCanceledPayload) GetData() Subscription {
	if o == nil {
		return Subscription{}
	}
	return o.Data
}
