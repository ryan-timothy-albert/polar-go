// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
	"time"
)

// CustomerSession - A customer session that can be used to authenticate as a customer.
type CustomerSession struct {
	// Creation timestamp of the object.
	CreatedAt time.Time `json:"created_at"`
	// Last modification timestamp of the object.
	ModifiedAt *time.Time `json:"modified_at"`
	// The ID of the object.
	ID         string    `json:"id"`
	Token      string    `json:"token"`
	ExpiresAt  time.Time `json:"expires_at"`
	CustomerID string    `json:"customer_id"`
	// A customer in an organization.
	Customer Customer `json:"customer"`
}

func (c CustomerSession) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CustomerSession) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CustomerSession) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *CustomerSession) GetModifiedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ModifiedAt
}

func (o *CustomerSession) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CustomerSession) GetToken() string {
	if o == nil {
		return ""
	}
	return o.Token
}

func (o *CustomerSession) GetExpiresAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.ExpiresAt
}

func (o *CustomerSession) GetCustomerID() string {
	if o == nil {
		return ""
	}
	return o.CustomerID
}

func (o *CustomerSession) GetCustomer() Customer {
	if o == nil {
		return Customer{}
	}
	return o.Customer
}
