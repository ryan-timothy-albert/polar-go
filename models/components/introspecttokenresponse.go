// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type IntrospectTokenResponseTokenType string

const (
	IntrospectTokenResponseTokenTypeAccessToken  IntrospectTokenResponseTokenType = "access_token"
	IntrospectTokenResponseTokenTypeRefreshToken IntrospectTokenResponseTokenType = "refresh_token"
)

func (e IntrospectTokenResponseTokenType) ToPointer() *IntrospectTokenResponseTokenType {
	return &e
}
func (e *IntrospectTokenResponseTokenType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "access_token":
		fallthrough
	case "refresh_token":
		*e = IntrospectTokenResponseTokenType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for IntrospectTokenResponseTokenType: %v", v)
	}
}

type IntrospectTokenResponse struct {
	Active    bool                             `json:"active"`
	ClientID  string                           `json:"client_id"`
	TokenType IntrospectTokenResponseTokenType `json:"token_type"`
	Scope     string                           `json:"scope"`
	SubType   SubType                          `json:"sub_type"`
	Sub       string                           `json:"sub"`
	Aud       string                           `json:"aud"`
	Iss       string                           `json:"iss"`
	Exp       int64                            `json:"exp"`
	Iat       int64                            `json:"iat"`
}

func (o *IntrospectTokenResponse) GetActive() bool {
	if o == nil {
		return false
	}
	return o.Active
}

func (o *IntrospectTokenResponse) GetClientID() string {
	if o == nil {
		return ""
	}
	return o.ClientID
}

func (o *IntrospectTokenResponse) GetTokenType() IntrospectTokenResponseTokenType {
	if o == nil {
		return IntrospectTokenResponseTokenType("")
	}
	return o.TokenType
}

func (o *IntrospectTokenResponse) GetScope() string {
	if o == nil {
		return ""
	}
	return o.Scope
}

func (o *IntrospectTokenResponse) GetSubType() SubType {
	if o == nil {
		return SubType("")
	}
	return o.SubType
}

func (o *IntrospectTokenResponse) GetSub() string {
	if o == nil {
		return ""
	}
	return o.Sub
}

func (o *IntrospectTokenResponse) GetAud() string {
	if o == nil {
		return ""
	}
	return o.Aud
}

func (o *IntrospectTokenResponse) GetIss() string {
	if o == nil {
		return ""
	}
	return o.Iss
}

func (o *IntrospectTokenResponse) GetExp() int64 {
	if o == nil {
		return 0
	}
	return o.Exp
}

func (o *IntrospectTokenResponse) GetIat() int64 {
	if o == nil {
		return 0
	}
	return o.Iat
}
