// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"polar/internal/utils"
)

type CheckoutCreateType string

const (
	CheckoutCreateTypeCheckoutProductCreate CheckoutCreateType = "CheckoutProductCreate"
	CheckoutCreateTypeCheckoutPriceCreate   CheckoutCreateType = "CheckoutPriceCreate"
)

type CheckoutCreate struct {
	CheckoutProductCreate *CheckoutProductCreate `queryParam:"inline"`
	CheckoutPriceCreate   *CheckoutPriceCreate   `queryParam:"inline"`

	Type CheckoutCreateType
}

func CreateCheckoutCreateCheckoutProductCreate(checkoutProductCreate CheckoutProductCreate) CheckoutCreate {
	typ := CheckoutCreateTypeCheckoutProductCreate

	return CheckoutCreate{
		CheckoutProductCreate: &checkoutProductCreate,
		Type:                  typ,
	}
}

func CreateCheckoutCreateCheckoutPriceCreate(checkoutPriceCreate CheckoutPriceCreate) CheckoutCreate {
	typ := CheckoutCreateTypeCheckoutPriceCreate

	return CheckoutCreate{
		CheckoutPriceCreate: &checkoutPriceCreate,
		Type:                typ,
	}
}

func (u *CheckoutCreate) UnmarshalJSON(data []byte) error {

	var checkoutProductCreate CheckoutProductCreate = CheckoutProductCreate{}
	if err := utils.UnmarshalJSON(data, &checkoutProductCreate, "", true, true); err == nil {
		u.CheckoutProductCreate = &checkoutProductCreate
		u.Type = CheckoutCreateTypeCheckoutProductCreate
		return nil
	}

	var checkoutPriceCreate CheckoutPriceCreate = CheckoutPriceCreate{}
	if err := utils.UnmarshalJSON(data, &checkoutPriceCreate, "", true, true); err == nil {
		u.CheckoutPriceCreate = &checkoutPriceCreate
		u.Type = CheckoutCreateTypeCheckoutPriceCreate
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CheckoutCreate", string(data))
}

func (u CheckoutCreate) MarshalJSON() ([]byte, error) {
	if u.CheckoutProductCreate != nil {
		return utils.MarshalJSON(u.CheckoutProductCreate, "", true)
	}

	if u.CheckoutPriceCreate != nil {
		return utils.MarshalJSON(u.CheckoutPriceCreate, "", true)
	}

	return nil, errors.New("could not marshal union type CheckoutCreate: all fields are null")
}
