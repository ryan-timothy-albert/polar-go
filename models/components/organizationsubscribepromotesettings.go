// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"polar/internal/utils"
)

type OrganizationSubscribePromoteSettings struct {
	// Promote email subscription (free)
	Promote *bool `default:"true" json:"promote"`
	// Show subscription count publicly
	ShowCount *bool `default:"true" json:"show_count"`
	// Include free subscribers in total count
	CountFree *bool `default:"true" json:"count_free"`
}

func (o OrganizationSubscribePromoteSettings) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OrganizationSubscribePromoteSettings) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *OrganizationSubscribePromoteSettings) GetPromote() *bool {
	if o == nil {
		return nil
	}
	return o.Promote
}

func (o *OrganizationSubscribePromoteSettings) GetShowCount() *bool {
	if o == nil {
		return nil
	}
	return o.ShowCount
}

func (o *OrganizationSubscribePromoteSettings) GetCountFree() *bool {
	if o == nil {
		return nil
	}
	return o.CountFree
}
