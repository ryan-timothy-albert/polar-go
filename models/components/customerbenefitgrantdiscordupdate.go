// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
)

type CustomerBenefitGrantDiscordUpdateBenefitType string

const (
	CustomerBenefitGrantDiscordUpdateBenefitTypeDiscord CustomerBenefitGrantDiscordUpdateBenefitType = "discord"
)

func (e CustomerBenefitGrantDiscordUpdateBenefitType) ToPointer() *CustomerBenefitGrantDiscordUpdateBenefitType {
	return &e
}
func (e *CustomerBenefitGrantDiscordUpdateBenefitType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "discord":
		*e = CustomerBenefitGrantDiscordUpdateBenefitType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerBenefitGrantDiscordUpdateBenefitType: %v", v)
	}
}

type CustomerBenefitGrantDiscordUpdate struct {
	benefitType CustomerBenefitGrantDiscordUpdateBenefitType `const:"discord" json:"benefit_type"`
	Properties  CustomerBenefitGrantDiscordPropertiesUpdate  `json:"properties"`
}

func (c CustomerBenefitGrantDiscordUpdate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CustomerBenefitGrantDiscordUpdate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CustomerBenefitGrantDiscordUpdate) GetBenefitType() CustomerBenefitGrantDiscordUpdateBenefitType {
	return CustomerBenefitGrantDiscordUpdateBenefitTypeDiscord
}

func (o *CustomerBenefitGrantDiscordUpdate) GetProperties() CustomerBenefitGrantDiscordPropertiesUpdate {
	if o == nil {
		return CustomerBenefitGrantDiscordPropertiesUpdate{}
	}
	return o.Properties
}
