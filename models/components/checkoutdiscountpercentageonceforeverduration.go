// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// CheckoutDiscountPercentageOnceForeverDuration - Schema for a percentage discount that is applied once or forever.
type CheckoutDiscountPercentageOnceForeverDuration struct {
	Duration    DiscountDuration `json:"duration"`
	Type        DiscountType     `json:"type"`
	BasisPoints int64            `json:"basis_points"`
	// The ID of the object.
	ID   string  `json:"id"`
	Name string  `json:"name"`
	Code *string `json:"code"`
}

func (o *CheckoutDiscountPercentageOnceForeverDuration) GetDuration() DiscountDuration {
	if o == nil {
		return DiscountDuration("")
	}
	return o.Duration
}

func (o *CheckoutDiscountPercentageOnceForeverDuration) GetType() DiscountType {
	if o == nil {
		return DiscountType("")
	}
	return o.Type
}

func (o *CheckoutDiscountPercentageOnceForeverDuration) GetBasisPoints() int64 {
	if o == nil {
		return 0
	}
	return o.BasisPoints
}

func (o *CheckoutDiscountPercentageOnceForeverDuration) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CheckoutDiscountPercentageOnceForeverDuration) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CheckoutDiscountPercentageOnceForeverDuration) GetCode() *string {
	if o == nil {
		return nil
	}
	return o.Code
}
