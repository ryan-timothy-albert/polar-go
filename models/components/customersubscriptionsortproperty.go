// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CustomerSubscriptionSortProperty string

const (
	CustomerSubscriptionSortPropertyStartedAt         CustomerSubscriptionSortProperty = "started_at"
	CustomerSubscriptionSortPropertyMinusStartedAt    CustomerSubscriptionSortProperty = "-started_at"
	CustomerSubscriptionSortPropertyAmount            CustomerSubscriptionSortProperty = "amount"
	CustomerSubscriptionSortPropertyMinusAmount       CustomerSubscriptionSortProperty = "-amount"
	CustomerSubscriptionSortPropertyStatus            CustomerSubscriptionSortProperty = "status"
	CustomerSubscriptionSortPropertyMinusStatus       CustomerSubscriptionSortProperty = "-status"
	CustomerSubscriptionSortPropertyOrganization      CustomerSubscriptionSortProperty = "organization"
	CustomerSubscriptionSortPropertyMinusOrganization CustomerSubscriptionSortProperty = "-organization"
	CustomerSubscriptionSortPropertyProduct           CustomerSubscriptionSortProperty = "product"
	CustomerSubscriptionSortPropertyMinusProduct      CustomerSubscriptionSortProperty = "-product"
)

func (e CustomerSubscriptionSortProperty) ToPointer() *CustomerSubscriptionSortProperty {
	return &e
}
func (e *CustomerSubscriptionSortProperty) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "started_at":
		fallthrough
	case "-started_at":
		fallthrough
	case "amount":
		fallthrough
	case "-amount":
		fallthrough
	case "status":
		fallthrough
	case "-status":
		fallthrough
	case "organization":
		fallthrough
	case "-organization":
		fallthrough
	case "product":
		fallthrough
	case "-product":
		*e = CustomerSubscriptionSortProperty(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CustomerSubscriptionSortProperty: %v", v)
	}
}
