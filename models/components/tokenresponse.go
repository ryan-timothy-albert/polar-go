// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
)

type TokenResponse struct {
	AccessToken  string  `json:"access_token"`
	tokenType    string  `const:"Bearer" json:"token_type"`
	ExpiresIn    int64   `json:"expires_in"`
	RefreshToken *string `json:"refresh_token"`
	Scope        string  `json:"scope"`
	IDToken      string  `json:"id_token"`
}

func (t TokenResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TokenResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TokenResponse) GetAccessToken() string {
	if o == nil {
		return ""
	}
	return o.AccessToken
}

func (o *TokenResponse) GetTokenType() string {
	return "Bearer"
}

func (o *TokenResponse) GetExpiresIn() int64 {
	if o == nil {
		return 0
	}
	return o.ExpiresIn
}

func (o *TokenResponse) GetRefreshToken() *string {
	if o == nil {
		return nil
	}
	return o.RefreshToken
}

func (o *TokenResponse) GetScope() string {
	if o == nil {
		return ""
	}
	return o.Scope
}

func (o *TokenResponse) GetIDToken() string {
	if o == nil {
		return ""
	}
	return o.IDToken
}
