// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/polarsource/polar-go/internal/utils"
)

// WebhookPledgeCreatedPayload - Sent when a new pledge is created. Note that this does mean that the pledge has been paid yet.
//
// **Discord & Slack support:** Full
type WebhookPledgeCreatedPayload struct {
	type_ string `const:"pledge.created" json:"type"`
	Data  Pledge `json:"data"`
}

func (w WebhookPledgeCreatedPayload) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookPledgeCreatedPayload) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WebhookPledgeCreatedPayload) GetType() string {
	return "pledge.created"
}

func (o *WebhookPledgeCreatedPayload) GetData() Pledge {
	if o == nil {
		return Pledge{}
	}
	return o.Data
}
