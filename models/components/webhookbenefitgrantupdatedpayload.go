// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"polar/internal/utils"
)

type WebhookBenefitGrantUpdatedPayloadType string

const (
	WebhookBenefitGrantUpdatedPayloadTypeBenefitGrantUpdated WebhookBenefitGrantUpdatedPayloadType = "benefit_grant.updated"
)

func (e WebhookBenefitGrantUpdatedPayloadType) ToPointer() *WebhookBenefitGrantUpdatedPayloadType {
	return &e
}
func (e *WebhookBenefitGrantUpdatedPayloadType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "benefit_grant.updated":
		*e = WebhookBenefitGrantUpdatedPayloadType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookBenefitGrantUpdatedPayloadType: %v", v)
	}
}

// WebhookBenefitGrantUpdatedPayload - Sent when a new benefit grant is updated.
//
// **Discord & Slack support:** Basic
type WebhookBenefitGrantUpdatedPayload struct {
	type_ WebhookBenefitGrantUpdatedPayloadType `const:"benefit_grant.updated" json:"type"`
	Data  BenefitGrantWebhook                   `json:"data"`
}

func (w WebhookBenefitGrantUpdatedPayload) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(w, "", false)
}

func (w *WebhookBenefitGrantUpdatedPayload) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &w, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *WebhookBenefitGrantUpdatedPayload) GetType() WebhookBenefitGrantUpdatedPayloadType {
	return WebhookBenefitGrantUpdatedPayloadTypeBenefitGrantUpdated
}

func (o *WebhookBenefitGrantUpdatedPayload) GetData() BenefitGrantWebhook {
	if o == nil {
		return BenefitGrantWebhook{}
	}
	return o.Data
}
