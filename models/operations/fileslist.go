// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/polarsource/polar-go/internal/utils"
	"github.com/polarsource/polar-go/models/components"
)

type FilesListRequest struct {
	OrganizationID *string `queryParam:"style=form,explode=true,name=organization_id"`
	// List of file IDs to get.
	Ids []string `queryParam:"style=form,explode=true,name=ids"`
	// Page number, defaults to 1.
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Size of a page, defaults to 10. Maximum is 100.
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
}

func (f FilesListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(f, "", false)
}

func (f *FilesListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &f, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *FilesListRequest) GetOrganizationID() *string {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *FilesListRequest) GetIds() []string {
	if o == nil {
		return nil
	}
	return o.Ids
}

func (o *FilesListRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *FilesListRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

type FilesListResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	ListResourceFileRead *components.ListResourceFileRead

	Next func() (*FilesListResponse, error)
}

func (o *FilesListResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *FilesListResponse) GetListResourceFileRead() *components.ListResourceFileRead {
	if o == nil {
		return nil
	}
	return o.ListResourceFileRead
}
