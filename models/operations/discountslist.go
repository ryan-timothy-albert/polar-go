// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"errors"
	"fmt"
	"github.com/polarsource/polar-go/internal/utils"
	"github.com/polarsource/polar-go/models/components"
)

type DiscountsListQueryParamOrganizationIDFilterType string

const (
	DiscountsListQueryParamOrganizationIDFilterTypeStr        DiscountsListQueryParamOrganizationIDFilterType = "str"
	DiscountsListQueryParamOrganizationIDFilterTypeArrayOfStr DiscountsListQueryParamOrganizationIDFilterType = "arrayOfStr"
)

// DiscountsListQueryParamOrganizationIDFilter - Filter by organization ID.
type DiscountsListQueryParamOrganizationIDFilter struct {
	Str        *string  `queryParam:"inline"`
	ArrayOfStr []string `queryParam:"inline"`

	Type DiscountsListQueryParamOrganizationIDFilterType
}

func CreateDiscountsListQueryParamOrganizationIDFilterStr(str string) DiscountsListQueryParamOrganizationIDFilter {
	typ := DiscountsListQueryParamOrganizationIDFilterTypeStr

	return DiscountsListQueryParamOrganizationIDFilter{
		Str:  &str,
		Type: typ,
	}
}

func CreateDiscountsListQueryParamOrganizationIDFilterArrayOfStr(arrayOfStr []string) DiscountsListQueryParamOrganizationIDFilter {
	typ := DiscountsListQueryParamOrganizationIDFilterTypeArrayOfStr

	return DiscountsListQueryParamOrganizationIDFilter{
		ArrayOfStr: arrayOfStr,
		Type:       typ,
	}
}

func (u *DiscountsListQueryParamOrganizationIDFilter) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = DiscountsListQueryParamOrganizationIDFilterTypeStr
		return nil
	}

	var arrayOfStr []string = []string{}
	if err := utils.UnmarshalJSON(data, &arrayOfStr, "", true, true); err == nil {
		u.ArrayOfStr = arrayOfStr
		u.Type = DiscountsListQueryParamOrganizationIDFilterTypeArrayOfStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for DiscountsListQueryParamOrganizationIDFilter", string(data))
}

func (u DiscountsListQueryParamOrganizationIDFilter) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.ArrayOfStr != nil {
		return utils.MarshalJSON(u.ArrayOfStr, "", true)
	}

	return nil, errors.New("could not marshal union type DiscountsListQueryParamOrganizationIDFilter: all fields are null")
}

type DiscountsListRequest struct {
	// Filter by organization ID.
	OrganizationID *DiscountsListQueryParamOrganizationIDFilter `queryParam:"style=form,explode=true,name=organization_id"`
	// Filter by name.
	Query *string `queryParam:"style=form,explode=true,name=query"`
	// Page number, defaults to 1.
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Size of a page, defaults to 10. Maximum is 100.
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
	// Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
	Sorting []components.DiscountSortProperty `queryParam:"style=form,explode=true,name=sorting"`
}

func (d DiscountsListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DiscountsListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DiscountsListRequest) GetOrganizationID() *DiscountsListQueryParamOrganizationIDFilter {
	if o == nil {
		return nil
	}
	return o.OrganizationID
}

func (o *DiscountsListRequest) GetQuery() *string {
	if o == nil {
		return nil
	}
	return o.Query
}

func (o *DiscountsListRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *DiscountsListRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *DiscountsListRequest) GetSorting() []components.DiscountSortProperty {
	if o == nil {
		return nil
	}
	return o.Sorting
}

type DiscountsListResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	ListResourceDiscount *components.ListResourceDiscount

	Next func() (*DiscountsListResponse, error)
}

func (o *DiscountsListResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *DiscountsListResponse) GetListResourceDiscount() *components.ListResourceDiscount {
	if o == nil {
		return nil
	}
	return o.ListResourceDiscount
}
