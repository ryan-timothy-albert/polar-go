// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/polarsource/polar-go/internal/utils"
	"github.com/polarsource/polar-go/models/components"
)

type OrganizationsListRequest struct {
	// Filter by slug.
	Slug *string `queryParam:"style=form,explode=true,name=slug"`
	// Page number, defaults to 1.
	Page *int64 `default:"1" queryParam:"style=form,explode=true,name=page"`
	// Size of a page, defaults to 10. Maximum is 100.
	Limit *int64 `default:"10" queryParam:"style=form,explode=true,name=limit"`
	// Sorting criterion. Several criteria can be used simultaneously and will be applied in order. Add a minus sign `-` before the criteria name to sort by descending order.
	Sorting []components.OrganizationSortProperty `queryParam:"style=form,explode=true,name=sorting"`
}

func (o OrganizationsListRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(o, "", false)
}

func (o *OrganizationsListRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &o, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *OrganizationsListRequest) GetSlug() *string {
	if o == nil {
		return nil
	}
	return o.Slug
}

func (o *OrganizationsListRequest) GetPage() *int64 {
	if o == nil {
		return nil
	}
	return o.Page
}

func (o *OrganizationsListRequest) GetLimit() *int64 {
	if o == nil {
		return nil
	}
	return o.Limit
}

func (o *OrganizationsListRequest) GetSorting() []components.OrganizationSortProperty {
	if o == nil {
		return nil
	}
	return o.Sorting
}

type OrganizationsListResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	ListResourceOrganization *components.ListResourceOrganization

	Next func() (*OrganizationsListResponse, error)
}

func (o *OrganizationsListResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *OrganizationsListResponse) GetListResourceOrganization() *components.ListResourceOrganization {
	if o == nil {
		return nil
	}
	return o.ListResourceOrganization
}
