// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/polarsource/polar-go/models/components"
)

type LicenseKeysUpdateRequest struct {
	ID               string                      `pathParam:"style=simple,explode=false,name=id"`
	LicenseKeyUpdate components.LicenseKeyUpdate `request:"mediaType=application/json"`
}

func (o *LicenseKeysUpdateRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *LicenseKeysUpdateRequest) GetLicenseKeyUpdate() components.LicenseKeyUpdate {
	if o == nil {
		return components.LicenseKeyUpdate{}
	}
	return o.LicenseKeyUpdate
}

type LicenseKeysUpdateResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successful Response
	LicenseKeyRead *components.LicenseKeyRead
}

func (o *LicenseKeysUpdateResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *LicenseKeysUpdateResponse) GetLicenseKeyRead() *components.LicenseKeyRead {
	if o == nil {
		return nil
	}
	return o.LicenseKeyRead
}
